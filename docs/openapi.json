{
  "openapi": "3.0.0",
  "info": {
    "version": "",
    "title": "OPENLOGI API v1.5",
    "description": "# ご利用方法\n物流アウトソーシングサービスの [オープンロジ](https://www.openlogi.com/) が提供する Web API です。\n\nOPENLOGI APIを活用することで物流業務の自動化を行うことができるようになります。\n\n## アクセストークンの取得\nOPENLOGI APIを利用してユーザリソースにアクセスするにはアクセストークンが必要となります。\n\nアクセストークンは下記リンクのAPI Token管理画面より発行することができます。\n詳細は[こちらのページ](https://help.openlogi.com/faq/show/64)をご確認ください。\n\n- <a href=\"https://app.openlogi.com/portal/tokens\" target=\"_blank\">本番環境でトークンを発行する</a>\n- <a href=\"https://app-demo.openlogi.com/portal/tokens\" target=\"_blank\">デモ環境でトークンを発行する</a>\n\n※`ユーザー管理`より追加したサブアカウントでのアクセストークンの発行はできません\n\n複数クライアントから利用する場合はそれぞれ別のアクセストークンを発行し利用してください。\n\nここで発行されるアクセストークンは有効期限が無い状態で発行されますので取り扱いにはくれぐれもご注意ください。 不要になったアクセストークンは必ず削除してください。 (アクセストークン漏洩による被害に関しては一切の責任を負いません)\n\n## 認証方法\nすべてのAPIエンドポイントへのリクエスト時に、取得したアクセストークンを`Authorization`リクエストヘッダーへセットしてリクエストしてください。\n\n```\nAuthorization: Bearer wz2FvCW3NRm4GZgLC7GMlW3XbM2qIIbuCDv8RZ8F...\n```\n\n## ベースURL\n\nOPENLOGI APIを提供するベースURLは以下になります。\n\n|環境 | ベースURL |\n|-----|-----------|\n|本番環境| `https://api.openlogi.com/api` |\n|デモ環境| `https://api-demo.openlogi.com/api` |\n\n## バージョン\nOPENLOGI APIはバージョン管理を行っています。\n\n|サポートするAPIバージョン|\n|-----|\n|`1.5`|\n\nすべてのAPIエンドポイントへのリクエスト時に、`X-Api-Version`リクエストヘッダーでバージョンを指定してください。\n\n```\nX-Api-Version: 1.5\n```\n\n## レートリミット\nAPIリクエストは1分間に60回を上限とします。\n\n1分間に60回を超えるリクエストを行うと、HTTPステータスコード429（Too Many Requests）が返却されます。\nレートリミットに達した場合は、リクエストを中断し、時間を空けてから再度リクエストを行ってください。\nそれ以上の頻度で送信する必要がある場合は、弊社までお問い合わせください。\n\n現在のレートリミットの状態は、レスポンスヘッダーの`X-RateLimit-Limit`（上限値）と`X-RateLimit-Remaining`（残り回数）で確認できます。\n\n```\nX-RateLimit-Limit: 60\nX-RateLimit-Remaining: 59\n```\n\n※仕様は変更となる場合があります。\n\n# エラーについて\nOPENLOGI APIでは、HTTPステータスコードを用いてリクエストの成否を表現しています。\n以下の表をご参考にエラーハンドリングをお願いします。\n\nリクエストがタイムアウトした（ステータスコードが5xxとなった）際は、ネットワーク接続が閉じられてもサーバー側で処理を継続し処理が成功している場合があります。\nこの場合、GETの場合は時間を置いてリトライをお願いします。\nまた、POSTの場合は管理画面でリソースが作られているかどうかの確認を、PUT/DELETEの場合はリソースをGETした結果で成否をご確認ください。\n\n## HTTPステータスコードとエラー内容\nステータス | 概要                  | `error`の値                          | 意味\n---------|-----------------------|-------------------------------------|---\n400      | Bad Request           | exceptionまたはapi_exception         | OPENLOGI APIが処理できないリクエスト形式です。なお、リクエストデータ形式の誤りは422となります。\n401      | Unauthorized          | unauthorized                        | 無効なAPIアクセストークンです。トークン値の確認または再発行をお願いします。\n402      | Payment Required      | payment_required                    | ご利用するにはお支払い方法の登録が必要になります。詳細は[こちら](https://help.openlogi.com/faq/show/36)をご確認ください。\n403      | Forbidden             | forbidden                           | 指定のAPIアクセストークンでは許可されていないリクエストです。リクエストしているリソースとトークン発行元が整合しているかご確認ください。\n404      | Not Found             | not_found                           | リクエストしているリソースがありません。または、HTTPメソッドやパスが間違っています。\n422      | Unprocessable Content | validation_failed                   | データバリデーション（検証）が失敗しました。多くの場合、「JSON構文に誤りがある」、「必須項目が不足している」、「項目の組み合わせの条件を満たしてない」などに該当します。これらはリトライでは解決しないため、リクエスト内容に間違いがないかご確認ください。\n429      | Too Many Requests     | Too Many Attempts.                  | API制限に達しました。リクエスト間隔を空けてリトライをお願いします。\n500      | Internal Server Error | internal_server_error               | OPENLOGI APIシステムに問題が発生しています。\n503      | Service Unavailable   | (注1)                               | OPENLOGI APIのメンテナンス中です。メンテナンス終了後にリクエストをお願いします。メンテナンス予定については[こちら](https://help.openlogi.com/faq/show/252)をご確認ください。\n504      | Gateway Timeout       | (注1)                               | OPENLOGI APIシステムに問題が発生しています。GETの場合は時間を置いてリトライを、POSTの場合は管理画面でリソースが作られているかどうかの確認を、PUT/DELETEの場合はリソースをGETした結果で成否をご確認ください。\n\n注1: `Content-Type`レスポンスヘッダーの値が`text/html`の場合もあるため、レスポンスボディではなくステータスコードをご利用ください。\n\n## 各エンドポイント共通のエラーレスポンススキーマ\n### 429 Too Many Requests\n```\nHTTP/1.1 429 Too Many Requests\nX-RateLimit-Limit: 60\nX-RateLimit-Remaining: 0\nContent-Type: application/json\n{\n  \"error\": \"Too Many Attempts.\",\n  \"error_description\": \"Too Many Attempts.\"\n}\n```\n\n### 500 Internal Server Error\n```\nHTTP/1.1 500 Internal Server Error\nContent-Type: application/json\n{\n  \"error\": \"internal_server_error\"\n}\n```\n\n### 503 Service Unavailable\n```\nHTTP/1.1 503 Service Unavailable\nContent-Type: text/html\n<html><head><title>503</title></head><body>ただいま、メンテナンス中です</body></html>\n```\n\n### 504 Gateway Timeout\n```\nHTTP/1.1 504 Gateway Timeout\n```\n\n# CHANGELOG\n\n[こちら](/doc/CHANGELOG.html)を参照してください。\n"
  },
  "servers": [
    {
      "url": "https://api.openlogi.com/api",
      "description": "本番環境"
    },
    {
      "url": "https://api-demo.openlogi.com/api",
      "description": "デモ環境"
    }
  ],
  "tags": [
    {
      "name": "items",
      "description": "商品に関連する情報を取得します"
    },
    {
      "name": "items(code指定)",
      "description": "商品コード（`code`）を指定して商品情報を操作します。\n\nオープンロジが発行する[商品ID](https://help.openlogi.com/faq/show/220)が不明な場合にご利用ください。\n\nパスパラメータに含まれるアカウントコードについては、[こちらのページ](https://help.openlogi.com/faq/show/263)をご確認ください。"
    },
    {
      "name": "warehousings",
      "description": "入荷に関連する情報を取得します"
    },
    {
      "name": "shipments",
      "description": "出荷に関連する情報を取得します"
    },
    {
      "name": "shipments(identifier指定)",
      "description": "出荷識別番号（`identifier`）を指定して出荷依頼を操作します\n\nオープンロジが発行する[出荷ID](https://help.openlogi.com/faq/show/269)が不明な場合にご利用ください。\n\nパスパラメータに含まれるアカウントコードについては、[こちらのページ](https://help.openlogi.com/faq/show/263)をご確認ください。"
    }
  ],
  "paths": {
    "/items": {
      "get": {
        "tags": [
          "items"
        ],
        "summary": "商品一覧",
        "description": "商品の一覧を在庫情報と合わせて取得できます。\n\n商品情報と同じフォーマットのJSONを配列で取得できます。\n",
        "operationId": "listItems",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "商品ID指定\n\nカンマ( `,` )区切りで複数IDを最大100件まで指定できます\n",
            "required": true,
            "schema": {
              "type": "string",
              "example": "TS001-I000001,AB001-I000003"
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "stock",
            "in": "query",
            "description": "`stock=1`と指定すると、レスポンスに在庫情報を含めます。",
            "required": false,
            "schema": {
              "type": "integer",
              "const": 1,
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "items"
                  ],
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "title": "商品情報の配列",
                      "items": {
                        "$ref": "#/components/schemas/ItemResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "items"
        ],
        "summary": "商品登録",
        "description": "商品を登録します。",
        "operationId": "postItem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "成功（セット商品含む）",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      }
    },
    "/items/bulk": {
      "post": {
        "tags": [
          "items"
        ],
        "summary": "商品一括登録",
        "description": "商品を一括登録します。\n\n商品登録と同じフォーマットのJSONを配列で送信することで一括登録できます。\n",
        "operationId": "bulkPostItems",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "description": "商品リスト",
                    "items": {
                      "$ref": "#/components/schemas/ItemRequest"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "成功（セット商品含む）",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "items"
                  ],
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "description": "商品リスト",
                      "items": {
                        "$ref": "#/components/schemas/ItemResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      }
    },
    "/items/{id}": {
      "get": {
        "tags": [
          "items"
        ],
        "summary": "商品情報取得",
        "description": "指定した1件の商品IDの商品情報を在庫情報と共に取得できます。\n\n商品コードを指定して商品情報を取得する場合は、[code指定の商品情報取得](#tag/items(code)/operation/getItemByCode)をご利用ください。",
        "operationId": "getItemById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "商品ID\n\n商品IDはオープンロジに商品を登録した際に自動で生成され、商品ごとに割り当てられる固有のIDです。",
            "required": true,
            "schema": {
              "type": "string",
              "example": "TS001-I000001",
              "externalDocs": {
                "description": "詳細はこちらのページをご確認ください。",
                "url": "https://help.openlogi.com/faq/show/220"
              }
            }
          },
          {
            "name": "stock",
            "in": "query",
            "description": "`stock=1`と指定すると、レスポンスに在庫情報を含めます。",
            "required": false,
            "schema": {
              "type": "integer",
              "const": 1,
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "items"
        ],
        "summary": "商品情報更新",
        "description": "指定した1件の商品IDの商品情報を更新します。\n\n商品コードを指定して商品情報を更新する場合は、[code指定の商品情報取得](#tag/items(code)/operation/putItemByCode)をご利用ください。",
        "operationId": "putItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "商品ID\n\n商品IDはオープンロジに商品を登録した際に自動で生成され、商品ごとに割り当てられる固有のIDです。",
            "required": true,
            "schema": {
              "type": "string",
              "example": "TS001-I000001",
              "externalDocs": {
                "description": "詳細はこちらのページをご確認ください。",
                "url": "https://help.openlogi.com/faq/show/220"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemRequestWithBundledItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "成功（セット商品含む）",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      },
      "delete": {
        "tags": [
          "items"
        ],
        "summary": "商品削除",
        "description": "商品を削除します。\n\n入荷依頼中および入荷実績があるアイテムは削除できません。\n",
        "operationId": "deleteItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "商品ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "TS001-I000001"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      }
    },
    "/items/{id}/images": {
      "post": {
        "tags": [
          "items"
        ],
        "summary": "商品画像登録",
        "description": "商品の画像を登録します。 jpeg, png タイプのファイルを指定できます。\n\nmultipart/form-data 形式でファイルを送信します。\n\n- Content-Disposition の name は file を指定してください。\n\n- ファイル名は Content-Disposition の filename で指定してください。\n\n- ファイル名がマルチバイトの場合は UTF-8 エンコードした値を指定してください。\n",
        "operationId": "postItemImage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "商品ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "TS001-I000001"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ImageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      }
    },
    "/items/{id}/images/{image_id}": {
      "delete": {
        "tags": [
          "items"
        ],
        "summary": "商品画像削除",
        "description": "商品画像を削除します。\n\n同梱物の場合、画像を全て削除することはできません。\n",
        "operationId": "deleteItemImage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "商品ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "TS001-I000001"
            }
          },
          {
            "name": "image_id",
            "in": "path",
            "description": "画像ID",
            "required": false,
            "schema": {
              "type": "string",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "example": {}
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      }
    },
    "/items/{account_id}": {
      "get": {
        "tags": [
          "items(code指定)"
        ],
        "summary": "商品一覧",
        "description": "商品の一覧を在庫情報と合わせて取得できます。\n\n商品情報と同じフォーマットのJSONが配列で取得できます。\n",
        "operationId": "listItemsByAccountId",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "アカウントコード",
            "required": true,
            "schema": {
              "type": "string",
              "example": "AB001"
            }
          },
          {
            "name": "identifier",
            "in": "query",
            "description": "商品識別番号\n\nカンマ( `,` )区切りで複数IDを最大100件まで指定できます\n",
            "required": true,
            "schema": {
              "type": "string",
              "example": "123456-098765,12345678,AB12345"
            }
          },
          {
            "name": "code",
            "in": "query",
            "description": "商品コード\n\nカンマ( `,` )区切りで複数IDを最大100件まで指定できます\n",
            "required": true,
            "schema": {
              "type": "string",
              "example": "DQ001,DQ002"
            }
          },
          {
            "name": "stock",
            "in": "query",
            "description": "在庫情報を含むかどうか",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "items"
                  ],
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ItemResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      }
    },
    "/items/{account_id}/{code}": {
      "get": {
        "tags": [
          "items(code指定)"
        ],
        "summary": "商品情報取得",
        "description": "在庫情報を含んだ商品情報を取得できます。",
        "operationId": "getItemByCode",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "アカウントコード",
            "required": true,
            "schema": {
              "type": "string",
              "example": "AB001"
            }
          },
          {
            "name": "code",
            "in": "path",
            "description": "商品コード",
            "required": true,
            "schema": {
              "type": "string",
              "example": "item-001"
            }
          },
          {
            "name": "stock",
            "in": "query",
            "description": "在庫情報を含むかどうか",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "items(code指定)"
        ],
        "summary": "商品更新",
        "description": "商品情報を更新します。",
        "operationId": "putItemByCode",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "アカウントコード",
            "required": true,
            "schema": {
              "type": "string",
              "example": "AB001"
            }
          },
          {
            "name": "code",
            "in": "path",
            "description": "商品コード",
            "required": true,
            "schema": {
              "type": "string",
              "example": "item-001"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemRequestWithBundledItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "成功（セット商品含む）",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      },
      "delete": {
        "tags": [
          "items(code指定)"
        ],
        "summary": "商品削除",
        "description": "商品を削除します。\n\n入荷依頼中および入荷実績があるアイテムは削除できません。\n",
        "operationId": "deleteItemByCode",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "アカウントコード",
            "required": true,
            "schema": {
              "type": "string",
              "example": "AB001"
            }
          },
          {
            "name": "code",
            "in": "path",
            "description": "商品コード",
            "required": true,
            "schema": {
              "type": "string",
              "example": "item-001"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      }
    },
    "/items/{account_id}/{code}/images": {
      "post": {
        "tags": [
          "items(code指定)"
        ],
        "summary": "商品画像登録",
        "description": "商品の画像を登録します。 jpeg, png タイプのファイルを指定できます。\n\nmultipart/form-data 形式でファイルを送信します。\n\n- Content-Disposition の name は file を指定してください。\n\n- ファイル名は Content-Disposition の filename で指定してください。\n\n- ファイル名がマルチバイトの場合は UTF-8 エンコードした値を指定してください。\n",
        "operationId": "postItemImageByCode",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "アカウントコード",
            "required": true,
            "schema": {
              "type": "string",
              "example": "AB001"
            }
          },
          {
            "name": "code",
            "in": "path",
            "description": "商品コード",
            "required": true,
            "schema": {
              "type": "string",
              "example": "item-001"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ImageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      }
    },
    "/items/{account_id}/{code}/{image_id}": {
      "delete": {
        "tags": [
          "items(code指定)"
        ],
        "summary": "商品画像削除",
        "description": "商品画像を削除します。\n\n同梱物の場合、画像を全て削除することはできません。\n",
        "operationId": "deleteItemImageByCode",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "アカウントコード",
            "required": true,
            "schema": {
              "type": "string",
              "example": "AB001"
            }
          },
          {
            "name": "code",
            "in": "path",
            "description": "商品コード",
            "required": true,
            "schema": {
              "type": "string",
              "example": "item-001"
            }
          },
          {
            "name": "image_id",
            "in": "path",
            "description": "画像ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "example": {}
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      }
    },
    "/warehousings": {
      "get": {
        "tags": [
          "warehousings"
        ],
        "summary": "入荷依頼一覧",
        "description": "入荷未完了状態の入荷依頼を取得します。\n\n入荷情報と同じフォーマットのJSONが配列で取得できます。\n",
        "operationId": "listWarehousings",
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WarehousingIndexResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "warehousings"
        ],
        "summary": "入荷依頼作成",
        "description": "入荷依頼を作成します。\n\n実際の入荷処理をするには別途入荷明細書と入荷ラベルが必要になります。\n[入荷ラベル取得API](#tag/warehousings/operation/getWarehousingPdf)またはオープンロジの入荷依頼中の画面より入荷明細書兼入荷ラベルのPDFを取得、印刷し、入荷明細書を同梱した上で入荷ラベルを箱に貼って倉庫宛に発送ください。\n[詳細はこちらのページをご確認ください。](https://help.openlogi.com/faq/show/16)\n",
        "operationId": "postWarehousing",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WarehousingRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WarehousingResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "402": {
            "$ref": "#/components/responses/PaymentRequired"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      }
    },
    "/warehousings/{id}": {
      "get": {
        "tags": [
          "warehousings"
        ],
        "summary": "入荷依頼情報",
        "description": "入荷情報を取得します。",
        "operationId": "getWarehousing",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "入荷ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "AB001-W0001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WarehousingResponseWithWarehousedData"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "warehousings"
        ],
        "summary": "入荷依頼更新",
        "description": "依頼中の出荷依頼を更新します。\n\nステータスによっては更新できません。\n",
        "operationId": "putWarehousing",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "入荷ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "AB001-W0001"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WarehousingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WarehousingResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      },
      "delete": {
        "tags": [
          "warehousings"
        ],
        "summary": "入荷依頼削除",
        "description": "入荷依頼をキャンセルします。\n\nステータスによってはキャンセルできません。\n",
        "operationId": "deleteWarehousing",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "入荷ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "AB001-W0001"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WarehousingResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      }
    },
    "/warehousings/stocked": {
      "get": {
        "tags": [
          "warehousings"
        ],
        "summary": "直近の入荷実績",
        "description": "指定日付の直近1日分の入荷実績（入荷済みの入荷依頼）を取得します。\n\n`date_before`の指定がある場合は、指定日からさかのぼって入荷作業を行った直近の日付です。\n指定した日に入荷実績があれば指定日、指定日に入荷実績がなく前日以前に入荷実績があればその入荷実績の日付です。\n`date_after`の場合は、指定日より後の直近の日付です。\n\nクエリパラメータを指定しない場合は、`date_before`にリクエスト日を指定した場合と同一です。\n\n**例**\n下記表は、日付が異なる3回の入荷実績がある場合の例です。\n\n入荷日 | 左記入荷日を含む`date_before`の例 | 左記入荷日を含む`date_after`の例\n---|---|---\n2025-01-10 | `date_before=20250110`, `date_before=20250131` | `date_after=20250106`, `date_after=20250110`\n2025-01-05 | `date_before=20250105`, `date_before=20250109` | `date_after=20250102`, `date_after=20250105`\n2025-01-01 | `date_before=20250101`, `date_before=20250102` | `date_after=20241201`, `date_after=20250101`",
        "operationId": "listRecentWarehousings",
        "parameters": [
          {
            "name": "date_before",
            "in": "query",
            "description": "指定日以前の最終入荷日の入荷実績を取得します。\n\n`date_after`と一緒に指定した場合は、`date_after`の指定を無視します。",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(?<year>\\d{4})(?<month>\\d{2})(?<day>\\d{2})$",
              "example": "20190101"
            }
          },
          {
            "name": "date_after",
            "in": "query",
            "description": "指定日以降の初回入荷日の入荷実績を取得します。\n\n`date_before`と一緒に指定した場合は、`date_after`の指定を無視します。",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(?<year>\\d{4})(?<month>\\d{2})(?<day>\\d{2})$",
              "example": "20190401"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "warehousings"
                  ],
                  "type": "object",
                  "properties": {
                    "warehousings": {
                      "type": "array",
                      "title": "入荷実績リスト",
                      "items": {
                        "$ref": "#/components/schemas/WarehousingResponseWithWarehousedData"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      }
    },
    "/warehousings/stocked/{year}/{month}/{day}": {
      "get": {
        "tags": [
          "warehousings"
        ],
        "summary": "指定年月日の入荷実績",
        "description": "指定年月日の入荷実績（`status`が`stocked`のもの）を取得します。\n\n`halfway`が`true`の場合、入荷依頼の一部の商品が入荷完了している状態を表します。",
        "operationId": "getWarehousingsByDate",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "入荷年(YYYY)",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}$",
              "example": "2019"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "入荷月(MM)",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^\\d{2}$",
              "example": "04"
            }
          },
          {
            "name": "day",
            "in": "path",
            "description": "入荷日(DD)\n\n指定しない場合は、指定年月の入荷実績を取得します。",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^\\d{2}$",
              "example": "01"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "warehousings"
                  ],
                  "type": "object",
                  "properties": {
                    "warehousings": {
                      "type": "array",
                      "title": "入荷実績リスト",
                      "items": {
                        "$ref": "#/components/schemas/WarehousingResponseWithWarehousedData"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      }
    },
    "/warehousings/{id}.pdf": {
      "get": {
        "tags": [
          "warehousings"
        ],
        "summary": "入荷ラベル取得",
        "description": "入荷ラベルを取得します。",
        "operationId": "getWarehousingPdf",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "入荷ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "AB001-W0001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/pdf": {
                "schema": {
                  "example": {}
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/shipments": {
      "get": {
        "tags": [
          "shipments"
        ],
        "summary": "出荷依頼一覧",
        "description": "依頼中（`status: shipped`以外）の出荷依頼を取得します。\n\nクエリパラメータで出荷IDを指定した場合は、出荷済み（`status: shipped`）の出荷依頼も取得します。\n",
        "operationId": "listShipments",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "出荷IDをカンマ( `,` )区切りで最大100件まで指定できます。\n",
            "required": false,
            "schema": {
              "type": "string",
              "example": "TS001-S000001,AB001-S000003",
              "externalDocs": {
                "description": "出荷IDについてはこちらのページをご確認ください。",
                "url": "https://help.openlogi.com/faq/show/269"
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "shipments"
                  ],
                  "type": "object",
                  "properties": {
                    "shipments": {
                      "type": "array",
                      "title": "出荷依頼一覧",
                      "minItems": 0,
                      "items": {
                        "$ref": "#/components/schemas/GetShipmentResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "shipments"
        ],
        "summary": "出荷依頼作成",
        "description": "出荷依頼を1件作成します。\n事前に商品登録が必要です。\n\n#### 識別番号と注文番号について\n- 出荷を特定するキーとして `identifier` が利用されます\n- `identifier` が指定されていない場合は `order_no` の値が `identifier` として保存されます\n- `identifier` と `order_no` のいずれかの指定が必須となります\n\n#### 在庫不足時の出荷依頼, 入荷前の商品の出荷依頼（出荷予約）の方法について\n- 出荷依頼単位の`backorder_if_unavailable`に`true`を指定してください。\n- 出荷ルールによる商品追加で在庫不足が発生する場合も同様です。\n",
        "operationId": "postShipment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostShipmentRequest"
              },
              "examples": {
                "domesticShipment": {
                  "$ref": "#/components/examples/DomesticShipmentRequest"
                },
                "internationalShipment": {
                  "$ref": "#/components/examples/InternationalShipmentRequest"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostShipmentResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "402": {
            "$ref": "#/components/responses/PaymentRequired"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      }
    },
    "/shipments/bulk": {
      "post": {
        "tags": [
          "shipments"
        ],
        "summary": "出荷依頼一括作成",
        "description": "出荷依頼作成と同じフォーマットのJSONを配列で送信することで一括作成できます。\n\n単一の出荷依頼作成APIとは異なり、`apply_rule`を出荷依頼単位ではなく、リクエスト単位で指定します。\nそのため、一括で作成するすべての出荷依頼について出荷ルールが評価され、それぞれの条件を満たす出荷ルールが適用されます。\n\n#### 推奨事項\n一括作成の件数には上限を設けていませんが、50件〜100件程度を推奨します。\n件数が多いほど処理時間も長くなるため、クライアントシステムのタイムアウト値の設定にご注意ください。\n\n#### エラー時の挙動について\nこのAPIはアトミックに処理をします。\nよって、一部の出荷依頼の作成に失敗した場合は、すべての出荷依頼が作成されません。\nこの場合は、エラーを修正し、同じ内容で再度リクエストするか、個別に出荷依頼を作成してください。",
        "operationId": "bulkPostShipments",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostShipmentsRequest"
              },
              "examples": {
                "domesticShipments": {
                  "$ref": "#/components/examples/DomesticShipmentRequestList"
                },
                "internationalShipment": {
                  "$ref": "#/components/examples/InternationalShipmentRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "shipments"
                  ],
                  "type": "object",
                  "properties": {
                    "shipments": {
                      "title": "出荷依頼リスト",
                      "description": "一括作成された出荷依頼の配列です。",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PostShipmentResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "402": {
            "$ref": "#/components/responses/PaymentRequired"
          },
          "422": {
            "$ref": "#/components/responses/BulkPostShipmentsUnprocessableContent"
          }
        }
      }
    },
    "/shipments/{id}": {
      "get": {
        "tags": [
          "shipments"
        ],
        "summary": "出荷依頼取得",
        "description": "指定した出荷IDの出荷依頼情報を取得します。\n",
        "operationId": "getShipment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "出荷ID",
            "required": true,
            "schema": {
              "type": "string",
              "externalDocs": {
                "description": "詳細はこちらのページをご確認ください。",
                "url": "https://help.openlogi.com/faq/show/269"
              }
            },
            "example": "TS001-S000001"
          }
        ],
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetShipmentResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "shipments"
        ],
        "summary": "出荷依頼更新",
        "description": "依頼中の出荷依頼を更新します。\n\n- 更新できる出荷依頼は、ステータスが`backordered`、`waiting`のものです\n- それ以外のステータスの出荷依頼を修正、キャンセルしたい場合は、それぞれ[出荷依頼修正リクエスト](#tag/shipments/operation/modifyShipment)と[出荷依頼キャンセルリクエスト](#tag/shipments/operation/cancelShipment)をご利用ください\n- 倉庫移動で作成された出荷依頼の更新には、[倉庫移動更新](#tag/shipments/operation/putTransfer)をご利用ください\n- 出荷依頼を更新した結果、出荷ルールの実行条件を満たしても出荷ルールは適用されません",
        "operationId": "putShipment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "出荷ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "TS001-S000001",
              "externalDocs": {
                "description": "詳細はこちらのページをご確認ください。",
                "url": "https://help.openlogi.com/faq/show/269"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShipmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostShipmentResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      },
      "delete": {
        "tags": [
          "shipments"
        ],
        "summary": "出荷依頼削除",
        "description": "ステータスによっては削除できません。",
        "operationId": "deleteShipment",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "出荷ID指定",
            "required": true,
            "schema": {
              "type": "string",
              "example": "TS001-S000001"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostShipmentResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      }
    },
    "/shipments/{id}/modify": {
      "post": {
        "tags": [
          "shipments"
        ],
        "summary": "出荷依頼修正リクエスト",
        "description": "ステータスがピッキング中・ピッキング済み・梱包済みの出荷依頼の修正を依頼します。\n\nデータ取り込み後の修正となりますので、別途事務手数料＋作業進捗状況による作業費用がかかります。\n\n海外発送の場合は梱包済みのステータス以降は依頼ができません。\n\nキャンセル依頼を出していただき、別途新規の出荷依頼を作成してください。\n\nまた、作業進捗状況によってはご依頼にお応えすることができない場合がございます。\n\nご了承の上ご利用ください。\n",
        "operationId": "modifyShipment",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "出荷ID指定",
            "required": true,
            "schema": {
              "type": "string",
              "example": "TS001-S000001"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyShipmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostShipmentResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      }
    },
    "/shipments/{id}/cancel": {
      "post": {
        "tags": [
          "shipments"
        ],
        "summary": "出荷依頼キャンセルリクエスト",
        "description": "ステータスがピッキング中・ピッキング済み・梱包済みの出荷依頼の修正を依頼します。\n\nデータ取り込み後の修正となりますので、別途事務手数料＋作業進捗状況による作業費用がかかります。\n\n海外発送の場合は梱包済みのステータス以降は依頼ができません。\n\nキャンセル依頼を出していただき、別途新規の出荷依頼を作成してください。\n\nまた、作業進捗状況によってはご依頼にお応えすることができない場合がございます。\n\nご了承の上ご利用ください。\n",
        "operationId": "cancelShipment",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "出荷ID指定",
            "required": true,
            "schema": {
              "type": "string",
              "example": "TS001-S000001"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostShipmentResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      }
    },
    "/shipments/{account_id}": {
      "get": {
        "tags": [
          "shipments(identifier指定)"
        ],
        "summary": "出荷依頼一覧",
        "description": "依頼中（`status`が`shipped`以外）の出荷依頼を取得します。\n\nクエリパラメータで識別番号を指定した場合は、出荷済み（`status`が`shipped`）の出荷依頼も取得します。",
        "operationId": "listShipmentsByAccountId",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "アカウントコード",
            "required": true,
            "schema": {
              "type": "string",
              "example": "TS001",
              "externalDocs": {
                "description": "詳細はこちらのページをご確認ください。",
                "url": "https://help.openlogi.com/faq/show/263"
              }
            }
          },
          {
            "name": "identifier",
            "in": "query",
            "description": "[出荷依頼作成](#tag/shipments/operation/postShipment)で指定した識別番号（`identifier`）をカンマ( `,` )区切りで最大100件まで指定できます。\n\n識別番号を指定していない場合は、注文番号（`order_no`）を識別番号として利用できます。",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2015-00001,2015-00002"
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "shipments"
                  ],
                  "type": "object",
                  "properties": {
                    "shipments": {
                      "type": "array",
                      "title": "出荷依頼一覧",
                      "minItems": 0,
                      "items": {
                        "$ref": "#/components/schemas/GetShipmentResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      }
    },
    "/shipments/{account_id}/{identifier}": {
      "get": {
        "tags": [
          "shipments(identifier指定)"
        ],
        "summary": "出荷依頼",
        "description": "出荷依頼を取得します。\n",
        "operationId": "getShipmentByAccountId",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "アカウントコード",
            "required": true,
            "schema": {
              "type": "string",
              "example": "TS001"
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "description": "識別番号",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2015-00001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetShipmentResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "shipments(identifier指定)"
        ],
        "summary": "出荷依頼修正",
        "description": "ステータスによっては更新できません。",
        "operationId": "putShipmentByAccountId",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "アカウントコード",
            "required": true,
            "schema": {
              "type": "string",
              "example": "TS001"
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "description": "識別番号",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2015-00001"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShipmentRequest"
              },
              "examples": {
                "domesticShipments": {
                  "$ref": "#/components/examples/DomesticShipmentRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostShipmentResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      },
      "delete": {
        "tags": [
          "shipments(identifier指定)"
        ],
        "summary": "出荷依頼削除",
        "description": "ステータスによっては削除できません。",
        "operationId": "deleteShipmentByAccountId",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "アカウントコード",
            "required": true,
            "schema": {
              "type": "string",
              "example": "TS001"
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "description": "識別番号",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2015-00001"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostShipmentResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      }
    },
    "/shipments/{account_id}/{identifier}/modify": {
      "post": {
        "tags": [
          "shipments(identifier指定)"
        ],
        "summary": "出荷依頼修正リクエスト",
        "description": "ステータスがピッキング中・ピッキング済み・梱包済みの出荷依頼の修正を依頼します。\n\nデータ取り込み後の修正となりますので、別途事務手数料＋作業進捗状況による作業費用がかかります。\n\n海外発送の場合は梱包済みのステータス以降は依頼ができません。\n\nキャンセル依頼を出していただき、別途新規の出荷依頼を作成してください。\n\nまた、作業進捗状況によってはご依頼にお応えすることができない場合がございます。\n\nご了承の上ご利用ください。\n",
        "operationId": "modifyShipmentByAccountId",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "アカウントコード",
            "required": true,
            "schema": {
              "type": "string",
              "example": "TS001"
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "description": "識別番号",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2015-00001"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyShipmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostShipmentResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      }
    },
    "/shipments/{account_id}/{identifier}/cancel": {
      "post": {
        "tags": [
          "shipments(identifier指定)"
        ],
        "summary": "出荷依頼キャンセルリクエスト",
        "description": "ステータスがピッキング中・ピッキング済み・梱包済みの出荷依頼の修正を依頼します。\n\nデータ取り込み後の修正となりますので、別途事務手数料＋作業進捗状況による作業費用がかかります。\n\n海外発送の場合は梱包済みのステータス以降は依頼ができません。\n\nキャンセル依頼を出していただき、別途新規の出荷依頼を作成してください。\n\nまた、作業進捗状況によってはご依頼にお応えすることができない場合がございます。\n\nご了承の上ご利用ください。\n",
        "operationId": "cancelShipmentByAccountId",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "アカウントコード",
            "required": true,
            "schema": {
              "type": "string",
              "example": "TS001"
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "description": "識別番号",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2015-00001"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostShipmentResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      }
    },
    "/shipments/shipped": {
      "get": {
        "tags": [
          "shipments"
        ],
        "summary": "直近の出荷実績",
        "description": "指定日付の直近1日分の出荷実績（出荷済みの出荷依頼）を取得します。\n\nクエリパラメータを指定しない場合は、リクエスト日の直近1日分の出荷実績を取得します。\n",
        "operationId": "listShippedShipments",
        "parameters": [
          {
            "name": "date_before",
            "in": "query",
            "description": "指定日以前の最終出荷日の出荷実績を取得します。\n\n`date_after`と一緒に指定した場合は、`date_after`の指定を無視します。",
            "schema": {
              "type": "string",
              "pattern": "^(?<year>\\d{4})(?<month>\\d{2})(?<day>\\d{2})$",
              "example": "20190320"
            }
          },
          {
            "name": "date_after",
            "in": "query",
            "description": "指定日以降の初回出荷日の出荷実績を取得します。\n\n`date_before`と一緒に指定した場合は、`date_after`の指定を無視します。",
            "schema": {
              "type": "string",
              "pattern": "^(?<year>\\d{4})(?<month>\\d{2})(?<day>\\d{2})$",
              "example": "20190420"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "shipments"
                  ],
                  "type": "object",
                  "properties": {
                    "shipments": {
                      "type": "array",
                      "title": "出荷実績リスト",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/GetShipmentResponse"
                          },
                          {
                            "properties": {
                              "status": {
                                "example": "shipped"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      }
    },
    "/shipments/shipped/{year}/{month}/{day}": {
      "get": {
        "tags": [
          "shipments"
        ],
        "summary": "指定年月日の出荷実績",
        "description": "指定年月日の出荷実績（出荷済みの出荷依頼）を取得します。\n",
        "operationId": "getShippedShipment",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "出荷年(YYYY)",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}$",
              "example": "2019"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "出荷月(MM)",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d{2}$",
              "example": "04"
            }
          },
          {
            "name": "day",
            "in": "path",
            "description": "出荷日(DD)\n\n指定しない場合は、指定年月の出荷実績を取得します。",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^\\d{2}$",
              "example": "02"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "shipments"
                  ],
                  "type": "object",
                  "properties": {
                    "shipments": {
                      "type": "array",
                      "title": "出荷実績リスト",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/GetShipmentResponse"
                          },
                          {
                            "properties": {
                              "status": {
                                "example": "shipped"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      }
    },
    "/shipments/international/regions/ems": {
      "get": {
        "tags": [
          "shipments"
        ],
        "summary": "国コード情報",
        "description": "海外発送指定時に指定できる国コードの一覧を取得します。",
        "operationId": "getInternationalRegion",
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "regions"
                  ],
                  "type": "object",
                  "properties": {
                    "regions": {
                      "type": "array",
                      "description": "国コード情報リスト",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "description": "国コード",
                            "type": "string"
                          },
                          "name": {
                            "description": "名称",
                            "type": "string"
                          },
                          "name_english": {
                            "description": "名称(英名)",
                            "type": "string"
                          },
                          "region_ems": {
                            "description": "地帯",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "currency": {
                    "$ref": "#/components/examples/Region"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/shipments/international/currencies": {
      "get": {
        "tags": [
          "shipments"
        ],
        "summary": "通貨情報",
        "description": "海外発送時に指定できる通貨の一覧を取得します。",
        "operationId": "getInternationalCurrency",
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "currencies"
                  ],
                  "type": "object",
                  "properties": {
                    "currencies": {
                      "type": "array",
                      "description": "通貨情報リスト",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "description": "通貨コード",
                            "type": "string"
                          },
                          "name": {
                            "description": "名称",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "currency": {
                    "$ref": "#/components/examples/Currency"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/shipments/transfer": {
      "post": {
        "tags": [
          "shipments"
        ],
        "summary": "倉庫移動作成",
        "description": "指定商品の倉庫移動依頼をします。\n\n発送元住所、発送先住所は指定された倉庫の住所となります。\n\n通常出荷と同じ出荷依頼情報が作成され、同時に発送先倉庫での入荷依頼が作成されます。\n",
        "operationId": "postTransfer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "warehouse",
                  "destination",
                  "items"
                ],
                "properties": {
                  "warehouse": {
                    "type": "string",
                    "description": "移動元倉庫情報",
                    "example": "BASE2"
                  },
                  "destination": {
                    "type": "object",
                    "description": "移動先倉庫情報",
                    "properties": {
                      "warehouse": {
                        "type": "string",
                        "description": "倉庫コード",
                        "example": "BASE3"
                      }
                    }
                  },
                  "items": {
                    "type": "array",
                    "description": "移動商品リスト",
                    "items": {
                      "type": "object",
                      "required": [
                        "code",
                        "quantity"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "商品コード",
                          "example": "item-001"
                        },
                        "quantity": {
                          "type": "integer",
                          "description": "数量",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "description": "商品名",
                          "example": "勇者の盾"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      }
    },
    "/shipments/transfer/{id}": {
      "put": {
        "tags": [
          "shipments"
        ],
        "summary": "倉庫移動更新",
        "description": "ステータスによっては更新できません。",
        "operationId": "putTransfer",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "出荷ID指定",
            "required": true,
            "schema": {
              "type": "string",
              "example": "TS001-S000001"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "destination",
                  "items"
                ],
                "properties": {
                  "destination": {
                    "type": "object",
                    "description": "移動先倉庫情報",
                    "properties": {
                      "warehouse": {
                        "type": "string",
                        "description": "倉庫コード",
                        "example": "BASE3"
                      }
                    }
                  },
                  "items": {
                    "type": "array",
                    "description": "移動商品リスト",
                    "items": {
                      "type": "object",
                      "required": [
                        "code",
                        "quantity"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "商品コード",
                          "example": "item-001"
                        },
                        "quantity": {
                          "type": "integer",
                          "description": "数量",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "description": "商品名",
                          "example": "勇者の盾"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      }
    },
    "/shipments/transfer/{id}/modify": {
      "post": {
        "tags": [
          "shipments"
        ],
        "summary": "倉庫依頼修正リクエスト",
        "description": "ステータスがピッキング中になっている倉庫移動依頼の修正を依頼します。\n\nデータ取り込み後の修正となりますので、別途事務手数料＋作業進捗状況による作業費用がかかります。\n\nまた、作業進捗状況によってはご依頼にお応えすることができない場合がございます。\n\nご了承の上ご利用ください。\n",
        "operationId": "postTransferModify",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "出荷ID指定",
            "required": true,
            "schema": {
              "type": "string",
              "example": "TS001-S000001"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "destination"
                ],
                "properties": {
                  "destination": {
                    "type": "object",
                    "description": "移動先倉庫情報",
                    "properties": {
                      "warehouse": {
                        "type": "string",
                        "description": "倉庫コード",
                        "example": "BASE3"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      }
    },
    "/shipments/transfer/{id}/cancel": {
      "post": {
        "tags": [
          "shipments"
        ],
        "summary": "倉庫移動キャンセルリクエスト",
        "description": "ステータスがピッキング中になっている倉庫移動依頼のキャンセルを依頼します。\n\nデータ取り込み後のキャンセルとなりますので、別途事務手数料＋作業進捗状況による作業費用がかかります。\n\nまた、作業進捗状況によってはご依頼にお応えすることができない場合がございます。\n\nご了承の上ご利用ください。\n",
        "operationId": "postTransferCancel",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "出荷ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "TS001-S000001"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      }
    },
    "/shipments/allocation/{id}/clear": {
      "post": {
        "tags": [
          "shipments"
        ],
        "summary": "出荷商品の引当解除",
        "description": "対象の出荷依頼に含まれる全ての商品から引当が解除され入荷待ちに変更されます。\n\n解除実行後は引当優先順位が高い入荷待ちの出荷依頼から引当処理が行われます。\n\nご了承の上ご利用ください。\n",
        "operationId": "postAllocationClear",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "出荷ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "TS001-S000001"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostShipmentResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "child_item": {
        "anyOf": [
          {
            "title": "商品ID指定",
            "type": "object",
            "required": [
              "id",
              "quantity"
            ],
            "properties": {
              "id": {
                "type": "string",
                "title": "商品ID",
                "example": "TS001-I000001"
              },
              "quantity": {
                "type": "integer",
                "minimum": 1,
                "title": "数量",
                "example": 1
              }
            }
          },
          {
            "title": "商品コード指定",
            "type": "object",
            "required": [
              "code",
              "quantity"
            ],
            "properties": {
              "code": {
                "type": "string",
                "title": "商品コード",
                "example": "item-001"
              },
              "quantity": {
                "type": "integer",
                "minimum": 1,
                "title": "数量",
                "example": 1
              }
            }
          }
        ]
      },
      "Stock": {
        "type": "object",
        "required": [
          "quantity",
          "available",
          "shipping",
          "requesting"
        ],
        "properties": {
          "quantity": {
            "type": "integer",
            "title": "総数",
            "description": "倉庫に存在する在庫の総数。\n\n期限切れの在庫は含みません。",
            "example": 100
          },
          "available": {
            "type": "integer",
            "title": "配送可在庫数",
            "description": "総数のうち、追加で出荷依頼可能な数量（`quantity`から`shipping`と`reserved`を減算した数量）",
            "example": 70
          },
          "shipping": {
            "type": "integer",
            "title": "出荷作業中",
            "description": "総数のうち、引当済みおよび出荷作業中の数量。\n\n管理画面における取込待ち、ピッキング中、ピッキング済、梱包済みの状況となっている在庫数のことを指します。",
            "example": 20
          },
          "requesting": {
            "type": "integer",
            "title": "依頼中",
            "description": "出荷に必要な数量（`shipping`、`reserved`、`backordered`の和）\n\n同梱物の場合は、`shipping`と一致します。",
            "example": 10
          }
        }
      },
      "ReservedStock": {
        "type": "object",
        "required": [
          "reserved"
        ],
        "properties": {
          "reserved": {
            "type": "integer",
            "title": "引当待ち数",
            "description": "総数のうち、引当待ちの出荷依頼向けに確保されている数量。\n\n場合によって正確な数量とならないプロパティのため、利用は非推奨です。",
            "deprecated": true,
            "example": 10
          }
        }
      },
      "BackorderedStock": {
        "type": "object",
        "required": [
          "backordered"
        ],
        "properties": {
          "backordered": {
            "type": "integer",
            "title": "入荷待ち数",
            "description": "すでに出荷依頼が作成されて入荷待ちとなっている数量。\n\n期限切れとなった数量は含みません。",
            "example": 5
          }
        }
      },
      "UnallocatableStock": {
        "type": "object",
        "properties": {
          "unallocatable": {
            "type": "integer",
            "title": "期限切れ在庫数",
            "description": "※期限管理を利用するお客様のみ使用可能\n\n期限管理商品の場合に、期限切れとなった数量",
            "example": 5
          }
        }
      },
      "StockSize": {
        "type": "object",
        "required": [
          "size"
        ],
        "properties": {
          "size": {
            "type": "string",
            "enum": [
              "SS",
              "S",
              "60",
              "80",
              "100",
              "120",
              "140",
              "150",
              "160",
              "170",
              "180",
              "190",
              "200",
              "210",
              "220",
              "230",
              "240",
              "250",
              "260"
            ],
            "title": "サイズ",
            "description": "入荷時に測定された商品サイズ。ユーザーや倉庫によって取り扱い可能なサイズは異なります。",
            "example": "60",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/42"
            }
          }
        }
      },
      "StockWeight": {
        "type": "object",
        "required": [
          "weight"
        ],
        "properties": {
          "weight": {
            "type": "integer",
            "title": "重さ(グラム)",
            "description": "入荷時に測定された商品重量",
            "example": 200
          }
        }
      },
      "stock_summary": {
        "type": "object",
        "title": "在庫情報",
        "anyOf": [
          {
            "title": "通常商品",
            "allOf": [
              {
                "$ref": "#/components/schemas/Stock"
              },
              {
                "$ref": "#/components/schemas/ReservedStock"
              },
              {
                "$ref": "#/components/schemas/BackorderedStock"
              },
              {
                "$ref": "#/components/schemas/UnallocatableStock"
              },
              {
                "$ref": "#/components/schemas/StockSize"
              },
              {
                "$ref": "#/components/schemas/StockWeight"
              }
            ]
          },
          {
            "title": "同梱物",
            "allOf": [
              {
                "$ref": "#/components/schemas/Stock"
              }
            ]
          }
        ]
      },
      "warehousebase_stock": {
        "type": "object",
        "title": "各倉庫の在庫情報",
        "anyOf": [
          {
            "title": "通常商品",
            "allOf": [
              {
                "type": "object",
                "required": [
                  "warehouse"
                ],
                "properties": {
                  "warehouse": {
                    "type": "string",
                    "title": "倉庫コード",
                    "example": "NBZ"
                  }
                }
              },
              {
                "$ref": "#/components/schemas/Stock"
              },
              {
                "$ref": "#/components/schemas/ReservedStock"
              },
              {
                "$ref": "#/components/schemas/BackorderedStock"
              },
              {
                "$ref": "#/components/schemas/UnallocatableStock"
              },
              {
                "type": "object",
                "properties": {
                  "dispose": {
                    "type": "string",
                    "description": "廃棄依頼（waiting,processing）",
                    "example": "waiting"
                  }
                }
              }
            ]
          },
          {
            "title": "同梱物",
            "allOf": [
              {
                "type": "object",
                "required": [
                  "warehouse"
                ],
                "properties": {
                  "warehouse": {
                    "type": "string",
                    "title": "倉庫コード",
                    "example": "NBZ"
                  }
                }
              },
              {
                "$ref": "#/components/schemas/Stock"
              },
              {
                "$ref": "#/components/schemas/UnallocatableStock"
              }
            ]
          }
        ]
      },
      "ItemResponse": {
        "type": "object",
        "required": [
          "id",
          "code",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "商品ID",
            "description": "オープンロジに商品を登録した際に自動で生成され、商品ごとに割り当てられる固有のIDです。",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/220"
            },
            "example": "TS001-I000001"
          },
          "code": {
            "type": "string",
            "minLength": 1,
            "maxLength": 30,
            "title": "商品コード",
            "description": "商品に記載されたユーザー独自のコードや品番・型番を表す半角英数記号の文字列です。\n入出荷時に商品を指定する場合に使うことができます。\n\n商品コードは出荷時の同梱明細書にも記載されます。",
            "example": "item-002"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "商品名",
            "description": "商品名は出荷依頼作成時に変更することもできます。\n出荷依頼作成時に商品名（`.items[].name`）の指定がない場合に、この商品名が出荷依頼の同梱明細書に記載されます。",
            "example": "勇者の盾"
          },
          "price": {
            "oneOf": [
              {
                "title": "価格（リクエストパラメータ）",
                "type": "integer",
                "description": "商品マスタに登録された価格は、管理画面で出荷依頼を作成する際に自動入力されます。\nAPIで出荷依頼作成する際、価格（`.items[].unit_price`）の指定が無い場合には自動入力されません。",
                "example": 1000
              },
              {
                "title": "価格（レスポンス）",
                "type": "string",
                "description": "商品登録時に指定した`price`を文字列として返却します。桁区切りや通貨記号付与などの整形処理はされません。\n\n商品マスタに登録された価格は、管理画面で出荷依頼を作成する際に自動入力されます。\nAPIで出荷依頼作成する際、価格（`.items[].unit_price`）の指定が無い場合には自動入力されません。",
                "example": "1000"
              }
            ]
          },
          "is_reduced_tax": {
            "type": "boolean",
            "title": "軽減税率適用商品",
            "description": "軽減税率が適用される商品の場合は`true`を指定します。\n出荷依頼作成時に軽減税率適用商品（`.items[].is_reduced_tax`）の指定がない場合に、この軽減税率適用商品の値が適用されます。",
            "example": true
          },
          "hs_code": {
            "type": "string",
            "pattern": "^\\d{4}\\.?\\d{2}((\\.|-)?\\d{3,4})?$",
            "title": "HSコード",
            "description": "海外へ発送する場合の商品のHSコード。出荷依頼作成時に指定します。\n出荷依頼作成時にHSコード（`.items[].hs_code`）の指定がない場合に、このHSコードの値が適用されます。",
            "example": "000000.000",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/249"
            }
          },
          "barcode": {
            "type": "string",
            "maxLength": 30,
            "title": "管理バーコード",
            "description": "入荷依頼で検品タイプ：管理バーコードを選択した際に使用されます。\nUPC-A形式またはJAN13形式のバーコードを指定します。",
            "example": "1234567890128"
          },
          "item_barcodes": {
            "type": "array",
            "title": "関連バーコード",
            "description": "FBAに登録されている商品との紐づけに利用されるFNSKUを指定します。",
            "items": {
              "type": "string",
              "example": "TEST1"
            },
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/8"
            }
          },
          "description": {
            "type": "string",
            "maxLength": 16,
            "title": "品名",
            "description": "国内発送時の送り状に記載する品名",
            "example": "玩具",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/21"
            }
          },
          "international_info": {
            "type": "object",
            "description": "海外発送情報",
            "properties": {
              "invoice_summary": {
                "type": "string",
                "minLength": 3,
                "maxLength": 75,
                "title": "品名（英語）",
                "description": "海外発送時の送り状/INVOICEに記載される品名です。",
                "example": "Toy",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/256"
                }
              },
              "origin": {
                "type": "string",
                "pattern": "^[A-Z][A-Z]$",
                "minLength": 2,
                "maxLength": 2,
                "title": "原産国",
                "description": "海外発送時の送り状/INVOICEに記載される原産国です。\n国連LOCODEの国名2文字を指定します。",
                "example": "JP"
              }
            }
          },
          "child_items": {
            "type": "array",
            "minItems": 1,
            "maxItems": 10,
            "items": {
              "$ref": "#/components/schemas/child_item"
            },
            "title": "セット商品の子商品リスト",
            "description": "セット商品の場合に、組み合わせる商品を指定します。",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/59"
            }
          },
          "tags": {
            "type": "array",
            "minItems": 1,
            "title": "商品タグリスト",
            "items": {
              "type": "string",
              "maxLength": 255
            },
            "description": "商品に付与するタグを複数指定します。`,`, `，`, `､`, `、`はタグ文字列内で利用できません。",
            "example": [
              "water gun"
            ],
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/235"
            }
          },
          "stock": {
            "$ref": "#/components/schemas/stock_summary"
          },
          "stocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/warehousebase_stock"
            },
            "description": "各倉庫の在庫情報"
          },
          "bundled_item": {
            "type": "boolean",
            "title": "同梱物",
            "description": "この商品が同梱物の場合は、`true`となります。",
            "example": true,
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/19"
            }
          },
          "externalCode": {
            "type": "string",
            "title": "AMAZON FBA 用の FNSKU",
            "description": "関連付けたいFBA商品のFNSKU",
            "example": "TEST1",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/8"
            }
          },
          "hidden": {
            "type": "boolean",
            "title": "非表示",
            "description": "管理画面で商品を非表示設定した場合に、`true`となります。",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/201"
            }
          },
          "temperature_zone": {
            "type": "string",
            "nullable": true,
            "enum": [
              "dry",
              "constant",
              "chilled",
              "frozen"
            ],
            "title": "保管温度帯",
            "description": "※温度帯管理を利用するお客様のみ使用可能\n\n商品をどの温度帯で管理するか指定します。\n温度帯は概ねの目安となり実際の管理温度帯は倉庫によって異なります。\n\n- `dry`: 常温（5℃ ~ 35℃の範囲）\n- `constant`: 定温（10℃ ~ 25℃の範囲）\n- `chilled`: 冷蔵（-5℃ ~ 5℃の範囲）\n- `frozen`: 冷凍（-15℃以下）",
            "default": "dry",
            "example": "frozen",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/267"
            }
          },
          "fifo": {
            "type": "boolean",
            "nullable": true,
            "title": "先入れ先出し",
            "description": "※先入れ先出し管理を利用するお客様のみ使用可能",
            "example": true
          },
          "lot_limit_type": {
            "type": "string",
            "nullable": true,
            "enum": [
              "expiry",
              "manufacture"
            ],
            "title": "期限商品タイプ",
            "description": "※期限管理を利用するお客様のみ使用可能\n\n- `expiry`: 賞味期限で管理する商品\n- `manufacture`: 製造年月日で管理する商品",
            "example": "expiry",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/210"
            }
          },
          "expiry_at_allocatable_days": {
            "type": "integer",
            "minimum": 0,
            "nullable": true,
            "title": "引当可能残期間（賞味期限）",
            "description": "※期限管理を利用するお客様のみ使用可能\n\n賞味期限から何日前まで引当てできるかを指定します。`lot_limit_type`が`expiry`の場合に指定します。",
            "example": 20
          },
          "manufacture_date_allocatable_days": {
            "type": "integer",
            "minimum": 0,
            "nullable": true,
            "title": "引当可能残期間（製造年月日）",
            "description": "※期限管理を利用するお客様のみ使用可能\n\n製造年月日から何日前まで引当てできるかを指定します。`lot_limit_type`が`manufacture`の場合に指定します。",
            "example": 20
          },
          "expiry_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "title": "賞味期限",
            "description": "※期限管理を利用するお客様のみ使用可能\n\n入荷作業時に倉庫で賞味期限を入力します。",
            "example": "2021-04-05 21:00:00"
          },
          "manufacture_date": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "title": "製造年月日",
            "description": "※期限管理を利用するお客様のみ使用可能\n\n入荷作業時に倉庫で製造年月日を入力します。",
            "example": "2021-04-01"
          },
          "lot_allocatable_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "title": "引当可能期限",
            "description": "※期限管理を利用するお客様のみ使用可能\n\n賞味期限、製造年月日と商品情報の引当可能残期間から自動で計算された引当期限日です。",
            "example": "2021-04-05 18:00:00"
          },
          "lot_allocatable_priority": {
            "type": "integer",
            "nullable": true,
            "title": "ロット引当順",
            "description": "※先入れ先出し管理を利用するお客様のみ使用可能。期限商品では固定値が入ります。",
            "example": 1
          }
        }
      },
      "ItemRequest": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string",
            "minLength": 1,
            "maxLength": 30,
            "title": "商品コード",
            "description": "商品に記載されたユーザー独自のコードや品番・型番を表す半角英数記号の文字列です。\n入出荷時に商品を指定する場合に使うことができます。\n\n商品コードは出荷時の同梱明細書にも記載されます。",
            "example": "item-002"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "商品名",
            "description": "商品名は出荷依頼作成時に変更することもできます。\n出荷依頼作成時に商品名（`.items[].name`）の指定がない場合に、この商品名が出荷依頼の同梱明細書に記載されます。",
            "example": "勇者の盾"
          },
          "price": {
            "oneOf": [
              {
                "title": "価格（リクエストパラメータ）",
                "type": "integer",
                "description": "商品マスタに登録された価格は、管理画面で出荷依頼を作成する際に自動入力されます。\nAPIで出荷依頼作成する際、価格（`.items[].unit_price`）の指定が無い場合には自動入力されません。",
                "example": 1000
              },
              {
                "title": "価格（レスポンス）",
                "type": "string",
                "description": "商品登録時に指定した`price`を文字列として返却します。桁区切りや通貨記号付与などの整形処理はされません。\n\n商品マスタに登録された価格は、管理画面で出荷依頼を作成する際に自動入力されます。\nAPIで出荷依頼作成する際、価格（`.items[].unit_price`）の指定が無い場合には自動入力されません。",
                "example": "1000"
              }
            ]
          },
          "is_reduced_tax": {
            "type": "boolean",
            "title": "軽減税率適用商品",
            "description": "軽減税率が適用される商品の場合は`true`を指定します。\n出荷依頼作成時に軽減税率適用商品（`.items[].is_reduced_tax`）の指定がない場合に、この軽減税率適用商品の値が適用されます。",
            "example": true
          },
          "hs_code": {
            "type": "string",
            "pattern": "^\\d{4}\\.?\\d{2}((\\.|-)?\\d{3,4})?$",
            "title": "HSコード",
            "description": "海外へ発送する場合の商品のHSコード。出荷依頼作成時に指定します。\n出荷依頼作成時にHSコード（`.items[].hs_code`）の指定がない場合に、このHSコードの値が適用されます。",
            "example": "000000.000",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/249"
            }
          },
          "barcode": {
            "type": "string",
            "maxLength": 30,
            "title": "管理バーコード",
            "description": "入荷依頼で検品タイプ：管理バーコードを選択した際に使用されます。\nUPC-A形式またはJAN13形式のバーコードを指定します。",
            "example": "1234567890128"
          },
          "international_info": {
            "type": "object",
            "description": "海外発送情報",
            "properties": {
              "invoice_summary": {
                "type": "string",
                "minLength": 3,
                "maxLength": 75,
                "title": "品名（英語）",
                "description": "海外発送時の送り状/INVOICEに記載される品名です。",
                "example": "Toy",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/256"
                }
              },
              "origin": {
                "type": "string",
                "pattern": "^[A-Z][A-Z]$",
                "minLength": 2,
                "maxLength": 2,
                "title": "原産国",
                "description": "海外発送時の送り状/INVOICEに記載される原産国です。\n国連LOCODEの国名2文字を指定します。",
                "example": "JP"
              }
            }
          },
          "child_items": {
            "type": "array",
            "minItems": 1,
            "maxItems": 10,
            "items": {
              "$ref": "#/components/schemas/child_item"
            },
            "title": "セット商品の子商品リスト",
            "description": "セット商品の場合に、組み合わせる商品を指定します。",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/59"
            }
          },
          "tags": {
            "type": "array",
            "minItems": 1,
            "title": "商品タグリスト",
            "items": {
              "type": "string",
              "maxLength": 255
            },
            "description": "商品に付与するタグを複数指定します。`,`, `，`, `､`, `、`はタグ文字列内で利用できません。",
            "example": [
              "water gun"
            ],
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/235"
            }
          },
          "temperature_zone": {
            "type": "string",
            "nullable": true,
            "enum": [
              "dry",
              "constant",
              "chilled",
              "frozen"
            ],
            "title": "保管温度帯",
            "description": "※温度帯管理を利用するお客様のみ使用可能\n\n商品をどの温度帯で管理するか指定します。\n温度帯は概ねの目安となり実際の管理温度帯は倉庫によって異なります。\n\n- `dry`: 常温（5℃ ~ 35℃の範囲）\n- `constant`: 定温（10℃ ~ 25℃の範囲）\n- `chilled`: 冷蔵（-5℃ ~ 5℃の範囲）\n- `frozen`: 冷凍（-15℃以下）",
            "default": "dry",
            "example": "frozen",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/267"
            }
          },
          "fifo": {
            "type": "boolean",
            "nullable": true,
            "title": "先入れ先出し",
            "description": "※先入れ先出し管理を利用するお客様のみ使用可能",
            "example": true
          },
          "lot_limit_type": {
            "type": "string",
            "nullable": true,
            "enum": [
              "expiry",
              "manufacture"
            ],
            "title": "期限商品タイプ",
            "description": "※期限管理を利用するお客様のみ使用可能\n\n- `expiry`: 賞味期限で管理する商品\n- `manufacture`: 製造年月日で管理する商品",
            "example": "expiry",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/210"
            }
          },
          "expiry_at_allocatable_days": {
            "type": "integer",
            "minimum": 0,
            "nullable": true,
            "title": "引当可能残期間（賞味期限）",
            "description": "※期限管理を利用するお客様のみ使用可能\n\n賞味期限から何日前まで引当てできるかを指定します。`lot_limit_type`が`expiry`の場合に指定します。",
            "example": 20
          },
          "manufacture_date_allocatable_days": {
            "type": "integer",
            "minimum": 0,
            "nullable": true,
            "title": "引当可能残期間（製造年月日）",
            "description": "※期限管理を利用するお客様のみ使用可能\n\n製造年月日から何日前まで引当てできるかを指定します。`lot_limit_type`が`manufacture`の場合に指定します。",
            "example": 20
          }
        }
      },
      "ItemRequestWithBundledItem": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string",
            "minLength": 1,
            "maxLength": 30,
            "title": "商品コード",
            "description": "商品に記載されたユーザー独自のコードや品番・型番を表す半角英数記号の文字列です。\n入出荷時に商品を指定する場合に使うことができます。\n\n商品コードは出荷時の同梱明細書にも記載されます。",
            "example": "item-002"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "商品名",
            "description": "商品名は出荷依頼作成時に変更することもできます。\n出荷依頼作成時に商品名（`.items[].name`）の指定がない場合に、この商品名が出荷依頼の同梱明細書に記載されます。",
            "example": "勇者の盾"
          },
          "price": {
            "oneOf": [
              {
                "title": "価格（リクエストパラメータ）",
                "type": "integer",
                "description": "商品マスタに登録された価格は、管理画面で出荷依頼を作成する際に自動入力されます。\nAPIで出荷依頼作成する際、価格（`.items[].unit_price`）の指定が無い場合には自動入力されません。",
                "example": 1000
              },
              {
                "title": "価格（レスポンス）",
                "type": "string",
                "description": "商品登録時に指定した`price`を文字列として返却します。桁区切りや通貨記号付与などの整形処理はされません。\n\n商品マスタに登録された価格は、管理画面で出荷依頼を作成する際に自動入力されます。\nAPIで出荷依頼作成する際、価格（`.items[].unit_price`）の指定が無い場合には自動入力されません。",
                "example": "1000"
              }
            ]
          },
          "is_reduced_tax": {
            "type": "boolean",
            "title": "軽減税率適用商品",
            "description": "軽減税率が適用される商品の場合は`true`を指定します。\n出荷依頼作成時に軽減税率適用商品（`.items[].is_reduced_tax`）の指定がない場合に、この軽減税率適用商品の値が適用されます。",
            "example": true
          },
          "hs_code": {
            "type": "string",
            "pattern": "^\\d{4}\\.?\\d{2}((\\.|-)?\\d{3,4})?$",
            "title": "HSコード",
            "description": "海外へ発送する場合の商品のHSコード。出荷依頼作成時に指定します。\n出荷依頼作成時にHSコード（`.items[].hs_code`）の指定がない場合に、このHSコードの値が適用されます。",
            "example": "000000.000",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/249"
            }
          },
          "barcode": {
            "type": "string",
            "maxLength": 30,
            "title": "管理バーコード",
            "description": "入荷依頼で検品タイプ：管理バーコードを選択した際に使用されます。\nUPC-A形式またはJAN13形式のバーコードを指定します。",
            "example": "1234567890128"
          },
          "international_info": {
            "type": "object",
            "description": "海外発送情報",
            "properties": {
              "invoice_summary": {
                "type": "string",
                "minLength": 3,
                "maxLength": 75,
                "title": "品名（英語）",
                "description": "海外発送時の送り状/INVOICEに記載される品名です。",
                "example": "Toy",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/256"
                }
              },
              "origin": {
                "type": "string",
                "pattern": "^[A-Z][A-Z]$",
                "minLength": 2,
                "maxLength": 2,
                "title": "原産国",
                "description": "海外発送時の送り状/INVOICEに記載される原産国です。\n国連LOCODEの国名2文字を指定します。",
                "example": "JP"
              }
            }
          },
          "child_items": {
            "type": "array",
            "minItems": 1,
            "maxItems": 10,
            "items": {
              "$ref": "#/components/schemas/child_item"
            },
            "title": "セット商品の子商品リスト",
            "description": "セット商品の場合に、組み合わせる商品を指定します。",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/59"
            }
          },
          "tags": {
            "type": "array",
            "minItems": 1,
            "title": "商品タグリスト",
            "items": {
              "type": "string",
              "maxLength": 255
            },
            "description": "商品に付与するタグを複数指定します。`,`, `，`, `､`, `、`はタグ文字列内で利用できません。",
            "example": [
              "water gun"
            ],
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/235"
            }
          },
          "temperature_zone": {
            "type": "string",
            "nullable": true,
            "enum": [
              "dry",
              "constant",
              "chilled",
              "frozen"
            ],
            "title": "保管温度帯",
            "description": "※温度帯管理を利用するお客様のみ使用可能\n\n商品をどの温度帯で管理するか指定します。\n温度帯は概ねの目安となり実際の管理温度帯は倉庫によって異なります。\n\n- `dry`: 常温（5℃ ~ 35℃の範囲）\n- `constant`: 定温（10℃ ~ 25℃の範囲）\n- `chilled`: 冷蔵（-5℃ ~ 5℃の範囲）\n- `frozen`: 冷凍（-15℃以下）",
            "default": "dry",
            "example": "frozen",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/267"
            }
          },
          "fifo": {
            "type": "boolean",
            "nullable": true,
            "title": "先入れ先出し",
            "description": "※先入れ先出し管理を利用するお客様のみ使用可能",
            "example": true
          },
          "lot_limit_type": {
            "type": "string",
            "nullable": true,
            "enum": [
              "expiry",
              "manufacture"
            ],
            "title": "期限商品タイプ",
            "description": "※期限管理を利用するお客様のみ使用可能\n\n- `expiry`: 賞味期限で管理する商品\n- `manufacture`: 製造年月日で管理する商品",
            "example": "expiry",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/210"
            }
          },
          "expiry_at_allocatable_days": {
            "type": "integer",
            "minimum": 0,
            "nullable": true,
            "title": "引当可能残期間（賞味期限）",
            "description": "※期限管理を利用するお客様のみ使用可能\n\n賞味期限から何日前まで引当てできるかを指定します。`lot_limit_type`が`expiry`の場合に指定します。",
            "example": 20
          },
          "manufacture_date_allocatable_days": {
            "type": "integer",
            "minimum": 0,
            "nullable": true,
            "title": "引当可能残期間（製造年月日）",
            "description": "※期限管理を利用するお客様のみ使用可能\n\n製造年月日から何日前まで引当てできるかを指定します。`lot_limit_type`が`manufacture`の場合に指定します。",
            "example": 20
          },
          "bundled_item": {
            "type": "boolean",
            "nullable": true,
            "title": "同梱物",
            "description": "`true`の場合、この商品は同梱物となります。",
            "example": true,
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/19"
            }
          }
        }
      },
      "ImageRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "file"
          },
          "filename": {
            "type": "string",
            "example": "DQ003.jpg"
          }
        }
      },
      "ImageResponse": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": 1234
          }
        }
      },
      "schemas-ItemResponse": {
        "type": "object",
        "description": "商品",
        "required": [
          "id",
          "code",
          "name",
          "quantity"
        ],
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "title": "商品ID",
            "example": "TS001-I00001",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/220"
            }
          },
          "code": {
            "type": "string",
            "title": "商品コード",
            "description": "商品登録時に指定した商品コード。入荷依頼作成時に指定します。",
            "example": "sword-001"
          },
          "name": {
            "type": "string",
            "title": "商品名",
            "description": "商品マスタに登録されている商品名",
            "example": "勇者の盾"
          },
          "quantity": {
            "type": "integer",
            "title": "数量",
            "description": "入荷依頼で指定した数量",
            "example": 1
          }
        }
      },
      "WarehousingResponse": {
        "type": "object",
        "description": "入荷依頼情報",
        "required": [
          "id",
          "status",
          "inspection_type",
          "items"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "入荷ID",
            "description": "オープンロジで入荷依頼を作成した際に自動で生成され、入荷依頼ごとに割り当てられる固有のIDです。",
            "example": "TS001-W0001",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/199"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "waiting",
              "received",
              "checking",
              "stocked"
            ],
            "title": "入荷ステータス",
            "description": "現在の入荷状況です。括弧内は管理画面での文言です。\n\n- `waiting` : 依頼中（着荷待ち）\n- `received` : 着荷済（検品待ち）\n- `checking` : 検品中\n- `stocked` : 完了",
            "example": "waiting",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/74"
            }
          },
          "halfway": {
            "type": "boolean",
            "title": "一部完了フラグ",
            "description": "`true`の場合、入荷依頼の一部の商品が入荷完了している状態を表します。",
            "example": false,
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/74"
            }
          },
          "arrival_date": {
            "type": "string",
            "format": "date",
            "title": "倉庫着予定日",
            "description": "倉庫に該当の入荷が着荷する予定日です。入荷依頼作成時に指定します。",
            "example": "2019-04-22"
          },
          "arrival_date_confirmed": {
            "type": "boolean",
            "title": "確定情報として登録",
            "description": "`true`の場合、倉庫着予定日が確定していることを表します。",
            "example": true
          },
          "arrival_time_from": {
            "type": "integer",
            "minimum": 0,
            "maximum": 23,
            "title": "倉庫着予定時間(いつから)",
            "description": "倉庫に該当の入荷が着荷する予定最短時刻です。入荷依頼作成時に指定します。",
            "example": 10
          },
          "arrival_time_to": {
            "type": "integer",
            "minimum": 0,
            "maximum": 23,
            "title": "倉庫着予定時間(いつまで)",
            "description": "倉庫に該当の入荷が着荷する予定最長時刻です。入荷依頼作成時に指定します。",
            "example": 13
          },
          "sales_method": {
            "type": "string",
            "title": "販売方法",
            "description": "入荷した商品を出荷する際の販売方法です。倉庫の作業計画を立てるために必要な情報です。\n\n- `INVENTORY`: 在庫販売\n- `RESERVATION`: 予約販売\n- `OTHER`: その他",
            "example": "RESERVATION",
            "enum": [
              "INVENTORY",
              "RESERVATION",
              "OTHER"
            ]
          },
          "shipping_scheduled_date": {
            "type": "string",
            "format": "date",
            "title": "出荷予定日",
            "description": "販売方法が `RESERVATION` の場合、返却されます。入荷依頼作成時に指定します。倉庫の作業計画を立てるために必要な情報です。",
            "example": "2019-04-29"
          },
          "stock_deadline_date": {
            "type": "string",
            "format": "date",
            "title": "入荷完了期限日",
            "description": "入荷作業の完了予定日です。デフォルトはシステムで自動算出されます。倉庫と交渉された場合は、交渉して決定された日付が返却されます。",
            "example": "2019-04-24",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/7"
            }
          },
          "identifier": {
            "type": "string",
            "maxLength": 30,
            "title": "入荷依頼識別子",
            "description": "ユーザーが入荷依頼をユニークに特定するための符号です。\nユーザーが任意に指定するものです。",
            "example": "Identifier-001"
          },
          "inspection_type": {
            "type": "string",
            "enum": [
              "ID",
              "NAME",
              "CODE",
              "BARCODE",
              "LABEL"
            ],
            "title": "検品タイプ",
            "description": "倉庫に届いた商品を検品する方法。\n\n- `ID`: オープンロジ商品ID\n- `NAME`: 商品名\n- `CODE`: 商品コード\n- `BARCODE`: 管理バーコード\n- `LABEL`: オープンロジ商品ラベル",
            "example": "CODE",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/11"
            }
          },
          "inspection_type_label": {
            "type": "string",
            "enum": [
              "オープンロジ商品ID",
              "商品名",
              "商品コード",
              "管理バーコード",
              "オープンロジ商品ラベル"
            ],
            "title": "検品タイプラベル",
            "description": "`inspection_type`の値の日本語名称",
            "example": "オープンロジ商品ID"
          },
          "transport_mode": {
            "type": "string",
            "title": "配送方法",
            "description": "入荷する際の配送方法を指定します。\n\n- `\"\"` : 指定なし\n- `HOME_DELIVERY` : 宅配便\n- `CHARTER` : チャーター\n- `CONTAINER` : コンテナ",
            "enum": [
              "",
              "HOME_DELIVERY",
              "CHARTER",
              "CONTAINER"
            ],
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/40"
            }
          },
          "identity_type": {
            "type": "string",
            "title": "入荷特定項目",
            "description": "倉庫で入荷を特定する際のキーとなる項目。\n\n- `ID_OR_LABEL` : 入荷ラベル・ID\n- `SUPPLIER` : 発注先名\n- `TRACKING_CODE` : お問い合わせ伝票番号\n- `VEHICLE_CODE` : 車両番号\n- `CONTAINER` : コンテナID",
            "enum": [
              "ID_OR_LABEL",
              "SUPPLIER",
              "TRACKING_CODE",
              "VEHICLE_CODE",
              "CONTAINER"
            ],
            "default": "ID_OR_LABEL"
          },
          "identity_values": {
            "type": "array",
            "nullable": true,
            "title": "入荷特定情報",
            "description": "入荷特定項目（`identity_type`）に対応した値の配列。\n\n入荷特定項目（`identity_type`）の値 | セットされる値\n---|---\n`ID_OR_LABEL`   | `null`\n`SUPPLIER`      | 入荷依頼作成時に指定した`identity_values`の値\n`TRACKING_CODE` | `tracking_codes`の値\n`VEHICLE_CODE`  | `vehicle_code`の値\n`CONTAINER`     | `container_no`の値",
            "items": {
              "type": "string",
              "example": "株式会社オープンロジ"
            }
          },
          "tracking_codes": {
            "type": "array",
            "title": "お問合せ伝票番号",
            "description": "配送方法が`HOME_DELIVERY` または `\"\"` であれば、このパラメータが返却されます。\n\n倉庫での入荷作業を円滑にしたり、トラブルの解決に必要な情報です。",
            "items": {
              "type": "string",
              "example": "TrackingCode001"
            }
          },
          "vehicle_code": {
            "type": "string",
            "maxLength": 30,
            "title": "車両番号",
            "description": "商品を倉庫へ送る際のチャーターやコンテナを載せる車両の番号。倉庫での入荷作業を円滑にしたり、トラブルの解決に必要な情報です。\n\n配送方法が `CHARTER` または `CONTAINER` の場合、返却されます。",
            "example": "品川 100 あ ・・・1"
          },
          "vehicle_size": {
            "type": "string",
            "title": "車両サイズ",
            "description": "車両やコンテナのサイズ。倉庫での入荷作業を円滑にしたり、トラブルの解決に必要な情報です。\n\n配送方法が `CHARTER` または `CONTAINER` の場合、返却されます。\n\n- `UNDER_2T`: 2t以下\n- `4T`: 4t\n- `10T`: 10t\n- `20FT`: 20ft\n- `40FT`: 40ft",
            "enum": [
              "UNDER_2T",
              "4T",
              "10T",
              "20FT",
              "40FT"
            ],
            "example": "4T"
          },
          "carrying_method": {
            "type": "string",
            "title": "積載方法",
            "description": "配送方法が `CHARTER` または `CONTAINER` の場合、返却されます。\n\n- `PALETTE`: パレット\n- `BARA`: バラ積み",
            "enum": [
              "PALETTE",
              "BARA"
            ],
            "example": "PALETTE"
          },
          "container_no": {
            "type": "string",
            "maxLength": 30,
            "title": "コンテナID",
            "description": "配送方法が `CONTAINER` の場合、返却されます。倉庫での入荷作業を円滑にしたり、トラブルの解決に必要な情報です。",
            "example": "AAAU1234567"
          },
          "driver_info": {
            "title": "ドライバー情報",
            "maxLength": 500,
            "description": "ドライバーに関する補足情報を指定できます。チャーター便の会社名や運転手の連絡先などを倉庫へ共有するための情報です。\n配送方法が `CHARTER` または `CONTAINER` の場合、指定できます。",
            "example": "株式会社oo 田中: 090-XXXX-XXXX"
          },
          "company_memo": {
            "type": "string",
            "maxLength": 255,
            "title": "入荷メモ",
            "description": "ユーザー側で利用するメモ欄。倉庫には共有されません。",
            "example": "キャンペーン用の商品です"
          },
          "items": {
            "type": "array",
            "title": "入荷商品リスト",
            "items": {
              "$ref": "#/components/schemas/schemas-ItemResponse"
            }
          },
          "warehouse": {
            "type": "string",
            "maxLength": 4,
            "title": "倉庫コード",
            "description": "入荷先倉庫の識別子"
          },
          "warehouse_info": {
            "type": "object",
            "title": "倉庫情報",
            "description": "入荷商品の送付先の情報",
            "additionalProperties": false,
            "properties": {
              "postcode": {
                "type": "string",
                "title": "郵便番号",
                "description": "入荷商品の送付先郵便番号",
                "example": "170-0013"
              },
              "address": {
                "type": "string",
                "title": "住所",
                "description": "入荷商品の送付先住所",
                "example": "東京都 豊島区東池袋1-34-5 いちご東池袋ビル9F"
              },
              "name": {
                "type": "string",
                "title": "倉庫名",
                "description": "入荷商品の送付先宛名",
                "example": "XXX倉庫"
              }
            },
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/37"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "入荷作成日時",
            "example": "2019-04-01T12:00:00+09:00"
          },
          "create_user": {
            "type": "object",
            "title": "入荷依頼者",
            "description": "当該入荷依頼を作成したユーザー情報",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string",
                "title": "入荷依頼者名"
              }
            },
            "example": {
              "name": "オープン太郎"
            }
          }
        }
      },
      "ShipmentReturn": {
        "type": "object",
        "properties": {
          "shipment_return": {
            "type": "boolean",
            "title": "返品フラグ",
            "description": "`true`の場合、返品によって作成された入荷依頼となります。\n返品された荷物は倉庫側で返品登録および再入荷が行われ、自動で在庫に戻ります。",
            "example": false,
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/14"
            }
          }
        }
      },
      "ItemReceivedResponse": {
        "type": "object",
        "properties": {
          "received": {
            "type": "integer",
            "title": "入荷実績数",
            "description": "実際に入荷された件数です。\n\n不明商品を配送可在庫に戻して、倉庫で追加検品された場合、この入荷実績数に追加されます。\n不良商品の場合は新規で入荷依頼が作成されるため、この入荷実績数には追加されません。",
            "example": 1,
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/218"
            }
          }
        }
      },
      "WarehousingIndexResponse": {
        "type": "object",
        "required": [
          "warehousings"
        ],
        "properties": {
          "warehousings": {
            "title": "入荷依頼情報一覧",
            "description": "入荷作業が未完了の入荷依頼情報を配列で返却します。",
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WarehousingResponse"
                },
                {
                  "$ref": "#/components/schemas/ShipmentReturn"
                },
                {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "description": "入荷商品リスト",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/schemas-ItemResponse"
                          },
                          {
                            "$ref": "#/components/schemas/ItemReceivedResponse"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "schemas-ItemRequest": {
        "type": "object",
        "title": "入荷商品",
        "required": [
          "code",
          "quantity"
        ],
        "additionalProperties": false,
        "properties": {
          "code": {
            "type": "string",
            "title": "商品コード",
            "description": "商品登録時に指定した商品コード",
            "example": "sword-001"
          },
          "quantity": {
            "type": "integer",
            "maximum": 999999999,
            "title": "数量",
            "example": 1
          }
        }
      },
      "WarehousingRequest": {
        "type": "object",
        "description": "入荷依頼情報",
        "required": [
          "arrival_date",
          "inspection_type",
          "items"
        ],
        "additionalProperties": false,
        "properties": {
          "inspection_type": {
            "type": "string",
            "enum": [
              "ID",
              "NAME",
              "CODE",
              "BARCODE",
              "LABEL"
            ],
            "title": "検品タイプ",
            "description": "倉庫に届いた商品を検品する方法。\n\n- `ID`: オープンロジ商品ID\n- `NAME`: 商品名\n- `CODE`: 商品コード\n- `BARCODE`: 管理バーコード\n- `LABEL`: オープンロジ商品ラベル",
            "example": "CODE",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/11"
            }
          },
          "items": {
            "type": "array",
            "minItems": 1,
            "maxItems": 25,
            "uniqueItems": true,
            "title": "入荷商品リスト",
            "description": "入荷する商品情報を指定します。同梱物も通常の商品と同様に指定します。",
            "items": {
              "$ref": "#/components/schemas/schemas-ItemRequest"
            }
          },
          "arrival_date": {
            "type": "string",
            "format": "date",
            "title": "倉庫着予定日",
            "description": "倉庫に該当の入荷が着荷する予定日です。未定の場合は、おおよその日付を指定します。",
            "example": "2019-04-22"
          },
          "arrival_date_confirmed": {
            "type": "boolean",
            "title": "確定情報として登録",
            "description": "倉庫着予定日が確定されていれば`true`を指定してください。\n\n以下の場合は、大量入荷として入荷完了までに着荷日を除く2営業日以上かかる場合があります。\n- 商品数量が200点以上\n- 100サイズ以上の商品が20点以上\n\n大量入荷になる場合は、必ず倉庫到着予定日の2日前までに、倉庫着予定日を確定情報として登録した上で入荷依頼を作成してください。",
            "example": true,
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/57"
            }
          },
          "arrival_time_from": {
            "type": "integer",
            "minimum": 0,
            "maximum": 23,
            "title": "倉庫着予定時間(いつから)",
            "description": "倉庫に該当の入荷が着荷する予定最短時刻です。",
            "example": 10
          },
          "arrival_time_to": {
            "type": "integer",
            "minimum": 0,
            "maximum": 23,
            "title": "倉庫着予定時間(いつまで)",
            "description": "倉庫に該当の入荷が着荷する予定最長時刻です。",
            "example": 13
          },
          "sales_method": {
            "type": "string",
            "title": "販売方法",
            "description": "入荷した商品を出荷する際の販売方法です。倉庫の作業計画を立てるために必要な情報です。\n\n- `INVENTORY`: 在庫販売\n- `RESERVATION`: 予約販売\n- `OTHER`: その他",
            "example": "RESERVATION",
            "enum": [
              "INVENTORY",
              "RESERVATION",
              "OTHER"
            ],
            "default": "INVENTORY"
          },
          "shipping_scheduled_date": {
            "type": "string",
            "format": "date",
            "title": "出荷予定日",
            "description": "販売方法が `RESERVATION` の場合にのみ指定できます。倉庫の作業計画を立てるために必要な情報です。",
            "example": "2019-04-29"
          },
          "transport_mode": {
            "type": "string",
            "title": "配送方法",
            "description": "入荷する際の配送方法を指定します。\n\n- `\"\"` : 指定なし\n- `HOME_DELIVERY` : 宅配便\n- `CHARTER` : チャーター\n- `CONTAINER` : コンテナ",
            "enum": [
              "",
              "HOME_DELIVERY",
              "CHARTER",
              "CONTAINER"
            ],
            "default": "HOME_DELIVERY",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/40"
            }
          },
          "identity_type": {
            "type": "string",
            "title": "入荷特定項目",
            "description": "※入荷ラベルなし入荷を利用するお客様のみ使用可能\n\n倉庫で入荷を特定する際のキーとなる項目を指定できます。\n許可された項目のみ指定できます。\n\n- `ID_OR_LABEL` : 入荷ラベル・ID\n- `SUPPLIER` : 発注先名。この値を指定し、`identity_values`を指定すると、倉庫側で発注先名を使用して入荷を特定します\n- `TRACKING_CODE` : お問い合わせ伝票番号。この値を指定し、`tracking_codes`を指定すると、倉庫側でお問い合わせ伝票番号を使用して入荷を特定します\n- `VEHICLE_CODE` : 車両番号。この値を指定し、`vehicle_code`を指定すると、倉庫側で車両番号を使用して入荷を特定します\n- `CONTAINER` : コンテナID。この値を指定し、`container_no`を指定すると、倉庫側でコンテナIDを使用して入荷を特定します",
            "enum": [
              "ID_OR_LABEL",
              "SUPPLIER",
              "TRACKING_CODE",
              "VEHICLE_CODE",
              "CONTAINER"
            ],
            "default": "ID_OR_LABEL"
          },
          "identity_values": {
            "type": "array",
            "title": "入荷特定情報",
            "description": "※入荷ラベルなし入荷を利用するお客様のみ使用可能\n\n入荷特定項目に対応した値を指定できます。\n\n- 入荷特定項目が`ID_OR_LABEL`の場合は指定できません。\n- 入荷特定項目が`SUPPLIER`の場合、このパラメータに発注先名を指定すると、倉庫側で発注先名を使用して入荷を特定します。",
            "items": {
              "type": "string",
              "example": "株式会社オープンロジ"
            }
          },
          "tracking_codes": {
            "type": "array",
            "title": "お問合せ伝票番号",
            "description": "配送方法が `HOME_DELIVERY` または `\"\"` であれば、このパラメータを指定できます。\n\n倉庫での入荷作業を円滑にしたり、トラブルの解決に必要な情報です。",
            "items": {
              "type": "string",
              "example": "TrackingCode001"
            }
          },
          "vehicle_code": {
            "type": "string",
            "maxLength": 30,
            "title": "車両番号",
            "description": "商品を倉庫へ送る際のチャーターやコンテナを載せる車両の番号を指定します。倉庫での入荷作業を円滑にしたり、トラブルの解決に必要な情報です。\n\n配送方法が `CHARTER` または `CONTAINER` の場合、指定できます。",
            "example": "品川 100 あ ・・・1"
          },
          "vehicle_size": {
            "type": "string",
            "title": "車両サイズ",
            "description": "車両やコンテナのサイズを指定できます。倉庫での入荷作業を円滑にしたり、トラブルの解決に必要な情報です。\n\n配送方法が `CHARTER` または `CONTAINER` の場合、指定できます。\n\n- `UNDER_2T`: 2t以下\n- `4T`: 4t\n- `10T`: 10t\n- `20FT`: 20ft\n- `40FT`: 40ft",
            "enum": [
              "UNDER_2T",
              "4T",
              "10T",
              "20FT",
              "40FT"
            ],
            "example": "4T"
          },
          "carrying_method": {
            "type": "string",
            "title": "積載方法",
            "description": "個口の積載方法を指定できます。\n配送方法が `CHARTER` または `CONTAINER` の場合、指定できます。\n\n- `PALETTE`: パレット\n- `BARA`: バラ積み",
            "enum": [
              "PALETTE",
              "BARA"
            ],
            "example": "PALETTE"
          },
          "container_no": {
            "type": "string",
            "maxLength": 30,
            "title": "コンテナID",
            "description": "配送方法が `CONTAINER` の場合、指定できます。倉庫での入荷作業を円滑にしたり、トラブルの解決に必要な情報です。",
            "example": "AAAU1234567"
          },
          "driver_info": {
            "type": "string",
            "maxLength": 500,
            "title": "ドライバー情報",
            "description": "ドライバーに関する補足情報を指定できます。チャーター便の会社名や運転手の連絡先などを倉庫へ共有するための情報です。\n配送方法が `CHARTER` または `CONTAINER` の場合、指定できます。",
            "example": "株式会社oo 田中: 090-XXXX-XXXX"
          },
          "company_memo": {
            "type": "string",
            "maxLength": 255,
            "title": "入荷メモ",
            "description": "ユーザー側で利用するメモ欄。倉庫には共有されません。",
            "example": "キャンペーン用の商品です"
          },
          "identifier": {
            "type": "string",
            "maxLength": 30,
            "title": "入荷依頼識別子",
            "description": "ユーザーが入荷依頼をユニークに特定するための符号です。\nユーザーが任意に指定するものです。\n大文字・小文字のアルファベット、数字、一部の記号のみ利用可能です。",
            "example": "Identifier-001"
          }
        }
      },
      "lotItemResponse": {
        "type": "object",
        "title": "期限管理商品",
        "required": [
          "id",
          "quantity"
        ],
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "title": "商品ID",
            "description": "※期限管理を利用するお客様のみ使用可能\n\nオープンロジに商品を登録した際に自動で生成され、商品ごとに割り当てられる固有のIDです。",
            "example": "TS001-I00001",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/220"
            }
          },
          "expiry_at": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "title": "賞味期限",
            "description": "※期限管理を利用するお客様のみ使用可能\n\n入荷作業時に倉庫で賞味期限を入力しています。",
            "example": "2022-04-22"
          },
          "manufacture_date": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "title": "製造年月日",
            "description": "※期限管理を利用するお客様のみ使用可能\n\n入荷作業時に倉庫で製造年月日を入力しています。",
            "example": "2022-04-22"
          },
          "lot_allocatable_at": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "title": "引当期限日",
            "description": "※期限管理を利用するお客様のみ使用可能\n\n賞味期限、製造年月日と商品情報の引当可能残期間から自動で計算された引当期限日です。",
            "example": "2022-04-22"
          },
          "received": {
            "type": "integer",
            "title": "入荷実績数",
            "description": "※期限管理を利用するお客様のみ使用可能",
            "example": 1,
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/218"
            }
          }
        }
      },
      "caseItemResponse": {
        "type": "object",
        "title": "ケース入荷情報",
        "required": [
          "quantity_in_case",
          "quantity"
        ],
        "additionalProperties": false,
        "properties": {
          "quantity_in_case": {
            "type": "integer",
            "title": "ケース入り数",
            "description": "※ケース入出荷機能を利用するお客様のみ使用可能\n\n端数となってピースとして入荷された場合は1となります。",
            "example": 10
          },
          "quantity": {
            "type": "integer",
            "title": "ケース数",
            "description": "※ケース入出荷機能を利用するお客様のみ使用可能\n\n端数となってピースとして入荷された場合はピース数となります。",
            "example": 3
          }
        }
      },
      "WarehousingResponseWithWarehousedData": {
        "allOf": [
          {
            "$ref": "#/components/schemas/WarehousingResponse"
          },
          {
            "$ref": "#/components/schemas/ShipmentReturn"
          },
          {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "description": "入荷商品リスト",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/schemas-ItemResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ItemReceivedResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "lot_items": {
                          "type": "array",
                          "description": "※期限管理を利用するお客様のみ使用可能",
                          "items": {
                            "$ref": "#/components/schemas/lotItemResponse"
                          },
                          "externalDocs": {
                            "description": "詳細はこちらのページをご確認ください。",
                            "url": "https://help.openlogi.com/faq/show/210"
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "cases": {
                          "type": "array",
                          "description": "※ケース入出荷機能を利用するお客様のみ使用可能",
                          "items": {
                            "$ref": "#/components/schemas/caseItemResponse"
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "warehoused_count": {
                          "type": "integer",
                          "title": "入荷総数",
                          "description": "入荷実績数に不良商品数を合算した入荷総数",
                          "example": 1,
                          "externalDocs": {
                            "description": "詳細はこちらのページをご確認ください。",
                            "url": "https://help.openlogi.com/faq/show/39"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      "DeliveryOption": {
        "type": "object",
        "nullable": true,
        "title": "受取人からの希望",
        "description": "受取人からの希望",
        "properties": {
          "box_delivery": {
            "type": "boolean",
            "title": "不在時宅配ボックス",
            "description": "「不在時宅配ボックス」を指示したい場合は`true`を指定します。",
            "example": true
          },
          "fragile_item": {
            "type": "boolean",
            "title": "割れ物注意",
            "description": "「割れ物注意」を指示したい場合は`true`を指定します。",
            "example": true
          }
        },
        "externalDocs": {
          "description": "詳細はこちらのページをご確認ください。",
          "url": "https://help.openlogi.com/faq/show/221"
        }
      },
      "components-schemas-ItemResponse": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "商品ID",
            "example": "TS001-I000004",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/284#item_id"
            }
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "納品書 商品名",
            "description": "同梱明細書に記載したい商品名。出荷依頼作成時に指定します。\n\n出荷依頼作成時に何も指定しない場合は、商品マスタに登録されている商品名が同梱明細書に記載されます。",
            "example": "勇者の盾"
          },
          "code": {
            "type": "string",
            "title": "商品コード",
            "description": "商品登録時に指定した商品コード。出荷依頼作成時に指定します。",
            "example": "item-001"
          },
          "quantity": {
            "type": "integer",
            "minimum": 1,
            "maximum": 999999999,
            "title": "数量",
            "description": "出荷する商品点数。出荷依頼作成時に指定します。",
            "example": 1
          },
          "unit_price": {
            "title": "納品書 単価",
            "nullable": true,
            "description": "同梱明細書に記載する「単価」。出荷依頼作成時に指定します。\n\n商品マスタに登録されている商品価格は自動入力されません。",
            "example": 1000
          },
          "price": {
            "title": "納品書 金額",
            "description": "同梱明細書に記載される「金額」。出荷依頼作成時に指定します。\n\n指定した値が同梱明細書に記載されます。計算の整合性のチェックは行われず、空欄の場合に自動計算、補完もされません。",
            "nullable": true,
            "example": 1000
          },
          "is_reduced_tax": {
            "type": "boolean",
            "title": "軽減税率適用商品",
            "description": "軽減税率が適用される商品の場合は`true`を指定します。\n\n何も指定しない場合は、商品マスタに登録されている軽減税率適用商品の設定が適用されます。",
            "example": true
          },
          "hs_code": {
            "type": "string",
            "pattern": "^\\d{4}\\.?\\d{2}((\\.|-)?\\d{3,4})?$",
            "title": "HSコード",
            "description": "海外へ発送する場合の商品のHSコード。出荷依頼作成時に指定します。",
            "example": "000000.000",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/249"
            }
          },
          "gift_wrapping_type": {
            "type": "string",
            "nullable": true,
            "enum": [
              "NAVY",
              "RED"
            ],
            "title": "ギフトラッピングタイプ",
            "description": "商品単位に指定するラッピングタイプ。出荷依頼作成時に指定します。\n\n- `NAVY`: ネイビー\n- `RED`: レッド",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/30"
            }
          },
          "cushioning_type": {
            "type": "string",
            "nullable": true,
            "enum": [
              "BUBBLE_PACK",
              "BUBBLE_DOUBLE_PACK"
            ],
            "title": "緩衝材種別",
            "description": "商品単位に指定する緩衝材の種別。出荷依頼作成時に指定します。\n\n- `BUBBLE_PACK`: プチプチ\n- `BUBBLE_DOUBLE_PACK`: プチプチ2重\n",
            "example": "BUBBLE_PACK",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/62"
            }
          },
          "backordered": {
            "type": "boolean",
            "title": "入荷待ちフラグ",
            "description": "`backorder_if_unavailable`を指定している場合に、在庫不足となっている商品に対して`true`となります。\n\n倉庫で出荷作業できるようにするには、このフラグが`true`のすべての商品を入荷する必要があります。",
            "example": false
          }
        }
      },
      "Package": {
        "oneOf": [
          {
            "title": "国内配送",
            "type": "object",
            "required": [
              "size"
            ],
            "properties": {
              "size": {
                "type": "string",
                "title": "個口サイズ",
                "description": "`S`, `60`などで表現する個口サイズ",
                "example": "S",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/239"
                }
              }
            }
          },
          {
            "title": "海外配送",
            "type": "object",
            "required": [
              "size",
              "weight",
              "tracking_code"
            ],
            "properties": {
              "size": {
                "type": "string",
                "title": "個口サイズ",
                "description": "`S`, `60`などで表現する個口サイズ",
                "example": "120",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/239"
                }
              },
              "weight": {
                "type": "integer",
                "title": "重量（グラム）",
                "description": "グラム単位での個口の重量",
                "example": 1000
              },
              "tracking_code": {
                "type": "string",
                "title": "伝票番号（追跡番号）",
                "example": "EL999999999JP"
              }
            }
          }
        ]
      },
      "ActualCase": {
        "type": "object",
        "properties": {
          "quantity_in_case": {
            "type": "string",
            "description": "ケース入り数（ピース実績の場合は1）",
            "example": 10
          },
          "quantity": {
            "type": "integer",
            "description": "ケース数（ピース実績の場合はピース数）",
            "example": 2
          }
        }
      },
      "ActualCases": {
        "type": "object",
        "title": "ケース実績情報詳細",
        "description": "※ケース入出荷機能を利用するお客様のみ使用可能",
        "properties": {
          "item_id": {
            "type": "string",
            "title": "商品ID",
            "example": 10
          },
          "details": {
            "type": "array",
            "title": "明細",
            "items": {
              "$ref": "#/components/schemas/ActualCase"
            }
          }
        }
      },
      "ActualShipmentToOverseas": {
        "type": "object",
        "properties": {
          "international": {
            "type": "boolean",
            "title": "海外配送フラグ",
            "description": "海外配送の場合に`true`となります。",
            "example": true
          },
          "currency_code": {
            "type": "string",
            "enum": [
              "JPY",
              "USD",
              "CNY",
              "EUR",
              "GBP",
              "IDR",
              "AUD"
            ],
            "title": "通貨コード",
            "description": "海外配送の場合に適用される通貨",
            "example": "USD"
          },
          "letter_of_attorney": {
            "type": "boolean",
            "default": false,
            "title": "通関委任状の代理発行",
            "description": "日本郵便株式会社に対し通関委任状（輸出）の発行を行った場合は、`true`となります。",
            "example": false,
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/10"
            }
          },
          "insurance": {
            "type": "boolean",
            "title": "海外発送用損害保証制度の加入希望",
            "description": "海外配送の場合に、損害保証制度の加入希望がある場合は`true`となります。",
            "example": false,
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/10"
            }
          },
          "purpose": {
            "type": "string",
            "enum": [
              "GIFT",
              "DOCUMENTS",
              "COMMERCIAL_SAMPLE",
              "SALE_OF_GOODS",
              "RETURNED_GOODS",
              "OTHERS"
            ],
            "title": "輸出目的",
            "description": "EMS/小形包装物 書留/DHL/Fedexの場合に指定します。\n輸出目的が指す品目と実際の商品とが異なる場合には、通関手続きができない場合があります。\n\n未指定の場合、【管理画面】 > 【設定】> 【配送情報】> 【配送設定】 > 「輸出目的設定」で選択した項目が適用されます。\n\n- `GIFT` : 贈物\n- `DOCUMENTS` : 書類\n- `COMMERCIAL_SAMPLE` : 商品見本\n- `SALE_OF_GOODS` : 販売品\n- `RETURNED_GOODS` : 返送品\n- `OTHERS` : その他\n",
            "example": "SALE_OF_GOODS"
          },
          "duty_paid": {
            "type": "boolean",
            "title": "DDP (Deliver Duty Paid)",
            "description": "海外配送の場合に、ユーザーが関税を支払う義務がある場合に`true`になります。"
          },
          "vat_number": {
            "type": "string",
            "title": "VAT番号",
            "description": "海外配送の場合に、付加価値税処理に必要な登録番号",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/257"
            }
          },
          "eori_number": {
            "type": "string",
            "title": "EORI番号",
            "description": "海外配送の場合に、EUにおける輸入・輸出を行う際のEU内での登録及び識別番号",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/257"
            }
          },
          "tax_number": {
            "type": "string",
            "title": "納税者番号",
            "minLength": 2,
            "maxLength": 30,
            "description": "一部の海外配送先の場合に、インボイスに記載が必要となる納税者番号",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/257"
            }
          }
        }
      },
      "Address": {
        "type": "object",
        "title": "国内出荷",
        "required": [
          "postcode",
          "prefecture",
          "address1",
          "name"
        ],
        "properties": {
          "postcode": {
            "type": "string",
            "pattern": "^\\d{3}-?\\d{4}$",
            "title": "郵便番号",
            "description": "日本郵便から提供される郵便番号マスタに収録されている必要があります。\n\n- 末尾が0000の郵便番号はその他地域扱いとなるため、ご利用できません\n- 事業所個別の郵便番号 はご利用できません\n- ハイフンは任意です",
            "example": 1700013
          },
          "name": {
            "type": "string",
            "title": "氏名",
            "description": "半角、全角区別なく15文字以内の文字数制限があります。\n**超過した16文字目以降は切り捨てられます。**",
            "example": "open 太郎"
          },
          "phone": {
            "type": "string",
            "minLength": 10,
            "maxLength": 13,
            "nullable": true,
            "title": "電話番号",
            "description": "電話番号の形式は以下のとおりです。\n- 0で始まる\n- 10~13文字\n- ハイフンは文字数に含まれません",
            "example": "03-3333-3333"
          },
          "prefecture": {
            "type": "string",
            "title": "都道府県",
            "example": "東京都"
          },
          "address1": {
            "type": "string",
            "maxLength": 64,
            "title": "住所",
            "description": "市区町村から始まるマンション・ビル名を除く住所。\n\n`address1`と`address2`を合わせた住所に対して、市・区を除いて全角32文字、半角64文字以内にしてください。",
            "example": "豊島区東池袋1-34-5"
          },
          "address2": {
            "type": "string",
            "maxLength": 64,
            "nullable": true,
            "title": "マンション・ビル名",
            "description": "`address1`と`address2`を合わせた住所に対して、市・区を除いて全角32文字、半角64文字以内にしてください。",
            "example": "いちご東池袋ビル9F"
          },
          "company": {
            "type": "string",
            "nullable": true,
            "title": "会社名",
            "description": "半角、全角区別なく16文字以内の文字数制限があります。\n**超過した17文字目以降は切り捨てられます。**",
            "example": "スライム株式会社"
          },
          "division": {
            "type": "string",
            "maxLength": 255,
            "nullable": true,
            "title": "部署",
            "example": "メタル部"
          }
        }
      },
      "Sender": {
        "type": "object",
        "properties": {
          "sender": {
            "type": "object",
            "title": "発送元住所",
            "description": "省略時は管理画面でデフォルトの依頼主に設定されている情報が使われます。",
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 15
                  },
                  "company": {
                    "type": "string",
                    "maxLength": 16,
                    "nullable": true
                  }
                }
              }
            ]
          }
        }
      },
      "InternationalAddress": {
        "type": "object",
        "title": "海外出荷",
        "required": [
          "region_code",
          "postcode",
          "city",
          "address",
          "name",
          "phone"
        ],
        "properties": {
          "region_code": {
            "type": "string",
            "pattern": "^[A-Z][A-Z](-[A-Z]+)?$",
            "title": "国コード",
            "description": "国コード（ISO 3166-1）を指定します。\n\nEMSの場合は、国コード情報APIを参照してください。\n\n配送キャリアごとに国コードの取り扱いを別途ご確認ください。",
            "example": "AU"
          },
          "postcode": {
            "type": "string",
            "maxLength": 10,
            "title": "郵便番号",
            "description": "郵便番号がない国の場合は、`---`と指定してください。",
            "example": 94043
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "氏名",
            "example": "open太郎"
          },
          "phone": {
            "type": "string",
            "maxLength": 40,
            "title": "電話番号",
            "example": "03-3333-3333"
          },
          "city": {
            "type": "string",
            "maxLength": 100,
            "title": "都市名",
            "example": "Mountain View, CA"
          },
          "address": {
            "type": "string",
            "maxLength": 255,
            "title": "住所",
            "example": "1600 Amphitheatre Parkway"
          }
        }
      },
      "Recipient": {
        "type": "object",
        "properties": {
          "recipient": {
            "type": "object",
            "title": "発送先住所",
            "description": "発送先住所 (海外出荷の場合は`region_code`を指定する必要が有ります)",
            "oneOf": [
              {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Address"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 15
                      },
                      "company": {
                        "type": "string",
                        "maxLength": 16,
                        "nullable": true
                      }
                    }
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/InternationalAddress"
              }
            ]
          }
        }
      },
      "GetShipmentResponse": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "string",
                "title": "出荷ID",
                "description": "オープンロジで出荷依頼を作成した際に自動で生成され、出荷依頼ごとに割り当てられる固有のIDです。",
                "example": "TS001-S000001",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/269"
                }
              },
              "identifier": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100,
                "nullable": true,
                "title": "識別番号",
                "description": "ユーザーが出荷依頼をユニークに識別するための符号です。\nユーザーが任意に指定します。\n\n出荷依頼を作成する場合は、`identifier` と `order_no` のいずれかが必須となります。",
                "example": "2015-00001"
              },
              "order_no": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100,
                "nullable": true,
                "title": "注文番号",
                "description": "ECサイトなどの注文に紐づくユニークな固有の符号です。\n同梱明細書の「注文番号」に印刷されます。\n\n出荷依頼を作成する場合は、`identifier` と `order_no` のいずれかが必須となります。\n",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/289"
                },
                "example": "#12345-67890"
              },
              "subtotal_amount": {
                "title": "納品書 小計",
                "description": "同梱明細書に記載される「小計」。出荷依頼作成時に指定します。\n計算の整合性のチェックは行われず、空欄の場合に自動計算、補完もされません。",
                "nullable": true,
                "example": 1000
              },
              "delivery_charge": {
                "title": "納品書 配送料",
                "description": "同梱明細書に記載される「配送料」。出荷依頼作成時に指定します。",
                "nullable": true,
                "example": 500
              },
              "handling_charge": {
                "title": "納品書 手数料",
                "description": "同梱明細書に記載される「手数料」。出荷依頼作成時に指定します。",
                "nullable": true,
                "example": 0
              },
              "discount_amount": {
                "title": "納品書 割引額",
                "description": "同梱明細書に記載される「割引額」。出荷依頼作成時に指定します。",
                "nullable": true,
                "example": 0
              },
              "total_amount": {
                "title": "納品書 合計",
                "description": "同梱明細書に記載される「合計」。出荷依頼作成時に指定します。\n計算の整合性のチェックは行われず、空欄の場合に自動計算、補完もされません。",
                "nullable": true,
                "example": 1500
              },
              "cushioning_unit": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "ORDER",
                  "ITEM"
                ],
                "title": "緩衝材単位",
                "description": "注文単位、もしくは商品単位で緩衝材指定します。緩衝材は有料オプションで別途料金が発生します。\n\n- `ORDER`: 注文単位\n- `ITEM`: 商品単位",
                "example": "ORDER",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/62"
                }
              },
              "cushioning_type": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "BUBBLE_PACK",
                  "BUBBLE_DOUBLE_PACK"
                ],
                "title": "緩衝材種別",
                "description": "緩衝材単位を注文単位で利用する場合に指定します。\n「注文単位」を指定した場合は、緩衝材種別を下記から指定してください。\n\n- `BUBBLE_PACK`: プチプチ\n- `BUBBLE_DOUBLE_PACK`: プチプチ2重\n",
                "example": "BUBBLE_PACK",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/62"
                }
              },
              "gift_wrapping_unit": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "ORDER",
                  "ITEM"
                ],
                "title": "ギフトラッピング単位",
                "description": "注文単位、もしくは商品単位でラッピングします。ギフトラッピングは有料オプションで別途料金が発生します。\n\n- `ORDER`: 注文単位\n- `ITEM`: 商品単位",
                "example": "ITEM",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/30"
                }
              },
              "gift_wrapping_type": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "NAVY",
                  "RED"
                ],
                "title": "ギフトラッピングタイプ",
                "description": "ギフトラッピング単位を注文単位で利用する場合に、ラッピングの色を指定します。\n「注文単位」でラッピングする場合は、ギフトラッピングタイプを下記から指定します。\n\n- `NAVY`: ネイビー\n- `RED`: レッド",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/30"
                }
              },
              "gift_sender_name": {
                "type": "string",
                "nullable": true,
                "title": "ギフト贈り主氏名",
                "description": "同梱明細書や送り状の「贈り主」欄に記載される名前を指定します。",
                "example": "オープン太郎"
              },
              "bundled_items": {
                "type": "array",
                "minItems": 1,
                "maxItems": 5,
                "uniqueItems": true,
                "nullable": true,
                "title": "同梱指定",
                "description": "同梱物の商品IDまたは商品コード (重複のない5つまで指定できます)。",
                "items": {
                  "type": "string",
                  "example": "TS001-I000001"
                }
              },
              "fba_shipment_id": {
                "type": "string",
                "title": "FBA納品番号",
                "description": "FBA納品向けの出荷の場合に、FBA納品番号がセットされます。",
                "example": "FBA123456789",
                "nullable": true
              },
              "shipping_email": {
                "type": "string",
                "format": "email",
                "nullable": true,
                "title": "配送先連絡メールアドレス",
                "description": "お届け先へお荷物発送のお知らせメールを送信したい場合に指定します。\n\n指定されたメールアドレス宛に「お荷物発送のお知らせ」メールをオープンロジドメインから自動送信します。\nこの項目が未指定または `null` の場合は、「発送通知メッセージ」が無効になります。",
                "example": "test@example.com",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/81"
                }
              },
              "delivery_note_type": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "NOT_INCLUDE_PII",
                  "NONE"
                ],
                "title": "明細書の同梱設定",
                "description": "明細書を同梱するかしないかを指定します。\n\n値がない場合は、出荷設定の同梱明細書の同梱設定に従います。\n\n- `NOT_INCLUDE_PII`: 住所非表示の明細書を同梱する\n- `NONE`: 同梱しない\n",
                "example": "NOT_INCLUDE_PII",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/70"
                }
              },
              "price_on_delivery_note": {
                "type": "boolean",
                "nullable": true,
                "title": "明細書への金額印字指定",
                "description": "明細書に金額を印字するかしないかを指定します。\n\n- `true`\n  - 明細書へ金額を印字する（この指定が他の設定よりも優先されます）\n- `false`\n  - 明細書へ金額を印字しない（この指定が他の設定よりも優先されます）\n- `null` または 未指定\n  - 管理画面の設定（【出荷設定】 > 【その他設定】 > 「同梱明細書の金額印字」）に従います。ただし、ギフトラッピングの場合は管理画面の設定に関わらず印字しません。",
                "example": true,
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/225"
                }
              },
              "message": {
                "type": "string",
                "maxLength": 500,
                "nullable": true,
                "title": "明細書メッセージ",
                "description": "同梱明細書に記載するメッセージです。\n\n依頼主マスタで設定している明細書メッセージを上書きする場合に利用します。\nただし、依頼主UUID（`sender.uuid`）を指定した出荷依頼の場合は、`message`での上書きはできません。",
                "example": "お買上げありがとうございます。"
              },
              "status": {
                "type": "string",
                "enum": [
                  "backordered",
                  "allocating",
                  "waiting",
                  "working",
                  "picking",
                  "picked",
                  "packed",
                  "shipped",
                  "suspended",
                  "modify_request",
                  "cancel_request"
                ],
                "description": "出荷ステータス\n\n`backordered` : 入荷待ち\n\n`allocating` : 引当中(`X-Api-Version` が `1.3` の場合)\n\n`waiting` : 引当済\n\n`working` : ピッキング中または検品済(`X-Api-Version` が `1.3` の場合)\n\n`picking` : ピッキング中(`X-Api-Version` が `1.4` 以降の場合)\n\n`picked` : 検品済(`X-Api-Version` が `1.4` 以降の場合)\n\n`packed` : 梱包済\n\n`shipped` : 出荷済\n\n`suspended` : 保留\n\n`modify_request` : 変更依頼中\n\n`cancel_request` : キャンセル依頼中\n",
                "example": "waiting"
              },
              "suspend": {
                "type": "boolean",
                "title": "保留フラグ",
                "description": "`true`は、出荷作業が開始されない保留状態を表します。\n\n保留状態の出荷依頼は、保留解除しない限り出荷作業が開始されません。\nただし、保留状態の出荷依頼にも在庫は引き当てられます。\n\n出荷作業を開始したくない場合に、出荷依頼時に`true`を指定します。\n保留状態を解除するには、[出荷依頼更新](#tag/shipments/operation/putShipment)を利用してください。",
                "default": false,
                "example": false,
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/213"
                }
              },
              "label_note": {
                "type": "string",
                "title": "品名",
                "description": "国内配送の送り状に記載される商品種別。\n\n出荷依頼作成時に、デフォルト品名（【出荷設定】 > 【その他設定】 > 「品名設定」）が未設定の場合に必須です。\n設定済みの場合は、その値が自動で使用されます。\n",
                "example": "玩具",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/21"
                }
              },
              "shipping_date": {
                "type": "string",
                "format": "date",
                "title": "出荷希望日",
                "description": "指定された日付以降に倉庫で出荷作業が行われます。倉庫の作業状況次第では希望日の翌日以降での出荷となる場合があります。\n\nお届け希望日を指定したい場合は、`delivery_date`をご利用ください。\n`delivery_date`と同時に指定された場合、「`shipping_date` < `delivery_date` <= `shipping_date` + 7日（クール便は3日）」を満たす必要があります。",
                "example": "2019-04-02",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/203"
                }
              },
              "assigned_shipping_date": {
                "type": "string",
                "format": "date",
                "title": "発送予定日",
                "description": "配送会社へ引き渡す予定の日付で、変動する場合があります。",
                "example": "2019-04-02"
              },
              "tax_included": {
                "type": "boolean",
                "title": "税込みフラグ",
                "description": "商品の登録価格、出荷明細の表示金額が税込み（`true`)か税抜き（`false`)かを表します。\n出荷依頼作成時の【出荷】 > 【出荷設定】 > 【その他設定】 > 「消費税設定」の設定内容が反映されます。",
                "example": true
              },
              "tax": {
                "type": "integer",
                "maximum": 999999999,
                "title": "消費税",
                "description": "同梱明細書に記載される「消費税」。出荷依頼作成時に指定します。\n\n【出荷】 > 【出荷設定】 > 【その他の設定】 > 「消費税設定」が「税抜」の場合にだけ、指定します。",
                "nullable": true,
                "example": 100
              },
              "total_with_normal_tax": {
                "type": "integer",
                "maximum": 999999999,
                "title": "合計通常税率",
                "description": "「合計」のうち消費税10%が適用される金額。出荷依頼作成時に指定します。\n\n「軽減税率適用商品」が含まれる場合のみ、指定した値が同梱明細書に記載されます。計算の整合性のチェックは行われず、空欄の場合に自動計算、補完もされません。",
                "example": 1000
              },
              "total_with_reduced_tax": {
                "type": "integer",
                "maximum": 999999999,
                "title": "合計軽減税率",
                "description": "「合計」のうち軽減税率の消費税8%が適用される金額。出荷依頼作成時に指定します。\n\n「軽減税率適用商品」が含まれる場合のみ、指定した値が同梱明細書に記載されます。計算の整合性のチェックは行われず、空欄の場合に自動計算、補完もされません。",
                "example": 500
              },
              "delivery_carrier": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "YAMATO",
                  "SAGAWA"
                ],
                "title": "配送会社",
                "description": "配送会社を指示したい場合に指定します。\n\n国内発送の場合に指定でき、指定すると別途料金が発生します。\n\n- `YAMATO`: ヤマト運輸\n- `SAGAWA`: 佐川急便\n",
                "example": "YAMATO",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/67"
                }
              },
              "delivery_time_slot": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "AM",
                  "12",
                  "14",
                  "16",
                  "18",
                  "19"
                ],
                "title": "希望時間指定",
                "description": "国内発送の場合に、配達の時間帯を指示したい場合に指定します。\n\n- `AM`: 午前中\n- `12`: 12時〜14時（佐川急便のみ指定可能）\n- `14`: 14時〜16時\n- `16`: 16時〜18時\n- `18`: 18時〜20時\n- `19`: 19時〜21時\n",
                "example": "AM",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/75"
                }
              },
              "delivery_date": {
                "type": "string",
                "format": "date",
                "nullable": true,
                "title": "配達希望日",
                "description": "国内発送の場合に、お届け希望日を指示したい場合に指定します。\n\n出荷作業の開始日を指定したい場合は、`shipping_date`をご利用ください。\n",
                "example": "2019-04-05",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/96"
                }
              },
              "delivery_day": {
                "type": "string",
                "format": "date",
                "nullable": true,
                "title": "お届け予定日",
                "description": "出荷前、海外や離島へのお届けの場合に`null`（お届け予定なし）となります。",
                "example": "2019-04-05"
              },
              "cash_on_delivery": {
                "type": "boolean",
                "title": "代金引換指定",
                "description": "`true`を指定したときだけ代金引換となります。代金引換を利用する場合は、事前に配送会社とサービス契約している必要があります。",
                "default": false,
                "example": false
              },
              "total_for_cash_on_delivery": {
                "type": "integer",
                "maximum": 999999999,
                "title": "代金引換総計",
                "description": "配送先に請求する、消費税や送料、手数料なども含めた代引きの請求金額。出荷依頼作成時に指定します。\n代金引換の場合のみ指定します。",
                "example": 1100
              },
              "tax_for_cash_on_delivery": {
                "type": "integer",
                "maximum": 999999999,
                "title": "代金引換消費税",
                "description": "代金引換総計のうち、消費税に当たる金額。出荷依頼作成時に指定します。\n代金引換の場合のみ指定します。",
                "example": 100
              },
              "delivery_method": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "POST_EXPRESS",
                  "HOME_BOX"
                ],
                "title": "配送便指定",
                "description": "SSサイズの商品、入荷実績のない商品で「配送便」を指定したい場合に指定します。\nSSサイズの商品のみ、かつポスト便のサイズに収まった場合に、このパラメータの省略時には`POST_EXPRESS`が設定されます。\n\n- `POST_EXPRESS`: ポスト便 (宅配便スピード)での配送 (SSサイズの商品で指定可能)\n- `HOME_BOX`: 宅配便 (段ボール梱包)での配送\n",
                "example": "HOME_BOX",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/212"
                }
              },
              "delivery_options": {
                "$ref": "#/components/schemas/DeliveryOption"
              },
              "bundle_shipping_label": {
                "type": "string",
                "nullable": true,
                "enum": [
                  null,
                  "FREIGHT_COLLECT",
                  "FREIGHT_PREPAID"
                ],
                "title": "引き取り交換ラベル",
                "description": "引き取り交換の希望内容を指定します。\n\n- `null`: 引き取り交換ではない出荷依頼\n- `FREIGHT_COLLECT`: 着払い伝票を同梱した交換のための出荷依頼\n- `FREIGHT_PREPAID`: 元払い伝票を同梱した交換のための出荷依頼"
              },
              "warehouse": {
                "type": "string",
                "title": "倉庫コード",
                "description": "出荷作業が行われる倉庫のコード",
                "example": "OPL"
              },
              "shipment_return": {
                "type": "boolean",
                "title": "返品フラグ",
                "description": "返品によって作成された出荷依頼かどうかを示します。\n返品された荷物は倉庫側で返品登録および再入荷が行われ、自動で在庫に戻ります。\n再出荷用の出荷依頼は自動で作成されます。",
                "example": true,
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/14"
                }
              },
              "items": {
                "type": "array",
                "title": "配送商品リスト",
                "items": {
                  "$ref": "#/components/schemas/components-schemas-ItemResponse"
                }
              },
              "assigned_temperature_zone": {
                "type": "string",
                "enum": [
                  "chilled",
                  "frozen"
                ],
                "title": "温度帯",
                "description": "クール便の場合の温度帯。出荷商品の保管温度帯によって自動で指定されます。\n\n- `chilled`: 冷蔵\n- `frozen`: 冷凍",
                "example": "frozen",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/267"
                }
              },
              "allocate_priority": {
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "title": "引当優先順位",
                "description": "出荷依頼に対して、出荷の商品単位で配送可在庫を確保する処理（引当）をオープンロジで行なっています。\n数字が大きいほど、優先的に引当されます。",
                "example": 0,
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/294"
                }
              },
              "shipped_at": {
                "type": "string",
                "format": "date-time",
                "title": "出荷完了日時",
                "description": "出荷された（倉庫から発送された）日時",
                "example": "2025-02-01T18:00:00+09:00"
              },
              "tracking_code": {
                "type": "string",
                "title": "伝票番号（追跡番号）略式",
                "description": "`tracking_codes`のうち、任意の1つの伝票番号（追跡番号）の値",
                "example": "123456789012"
              },
              "tracking_codes": {
                "type": "array",
                "title": "伝票番号（追跡番号）",
                "description": "伝票番号（追跡番号）の配列",
                "items": {
                  "type": "string"
                },
                "example": [
                  "123456789012",
                  "135791113170"
                ]
              },
              "url": {
                "type": "string",
                "nullable": true,
                "format": "uri",
                "title": "配送状況取得URL",
                "description": "伝票番号（追跡番号）を利用して、配送状況を確認するためのURL",
                "example": "http://example.com/"
              },
              "delivery_service": {
                "type": "string",
                "title": "配送サービス",
                "description": "出荷時に利用する配送方法を指定します。\n\n佐川急便\n  - `SAGAWA-HIKYAKU-YU-PACKET`: 佐川急便 飛脚ゆうパケット\n  - `SAGAWA-TAKUHAIBIN`: 佐川急便 宅配便\n  - `SAGAWA-COOLBIN`: 佐川急便 飛脚クール便\n\nヤマト運輸\n  - `YAMATO-NEKOPOSU`: ヤマト運輸 ネコポス\n  - `YAMATO-TAKKYUBIN`: ヤマト運輸 宅急便\n  - `YAMATO-COOLBIN`: ヤマト運輸 クール便\n\n日本郵便\n  - `JAPANPOST-EMS`: EMS\n  - `JAPANPOST-EPACKET`: 小形包装物 書留\n  - `JAPANPOST-YU-PACKET`: 日本郵便 ゆうパケット\n\nFedex\n  - `FEDEX-PRIORITY`: FedEx International Priority\n  - `FEDEX-CONNECT-PLUS`: FedEx International Connect Plus\n\nDHL\n  - `DHL-EXPRESS`: DHL Express",
                "enum": [
                  "SAGAWA-HIKYAKU-YU-PACKET",
                  "SAGAWA-TAKUHAIBIN",
                  "SAGAWA-COOLBIN",
                  "YAMATO-NEKOPOSU",
                  "YAMATO-TAKKYUBIN",
                  "YAMATO-COOLBIN",
                  "JAPANPOST-EMS",
                  "JAPANPOST-EPACKET",
                  "JAPANPOST-YU-PACKET",
                  "FEDEX-PRIORITY",
                  "FEDEX-CONNECT-PLUS",
                  "DHL-EXPRESS"
                ],
                "example": "YAMATO-TAKKYUBIN"
              },
              "package_quantity": {
                "type": "integer",
                "title": "個口数",
                "description": "発送された個口数",
                "example": 1
              },
              "packages": {
                "type": "array",
                "title": "個口実績情報詳細",
                "description": "発送された各個口の詳細情報",
                "items": {
                  "$ref": "#/components/schemas/Package"
                }
              },
              "cases": {
                "$ref": "#/components/schemas/ActualCases"
              }
            }
          },
          {
            "$ref": "#/components/schemas/ActualShipmentToOverseas"
          },
          {
            "$ref": "#/components/schemas/Sender"
          },
          {
            "$ref": "#/components/schemas/Recipient"
          }
        ]
      },
      "components-schemas-ItemRequest": {
        "title": "商品情報",
        "type": "object",
        "required": [
          "code",
          "quantity"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "納品書 商品名",
            "description": "同梱明細書に記載したい商品名。出荷依頼作成時に指定します。\n\n出荷依頼作成時に何も指定しない場合は、商品マスタに登録されている商品名が同梱明細書に記載されます。",
            "example": "勇者の盾"
          },
          "code": {
            "type": "string",
            "title": "商品コード",
            "description": "商品登録時に指定した商品コード。出荷依頼作成時に指定します。",
            "example": "item-001"
          },
          "quantity": {
            "type": "integer",
            "minimum": 1,
            "maximum": 999999999,
            "title": "数量",
            "description": "出荷する商品点数。出荷依頼作成時に指定します。",
            "example": 1
          },
          "unit_price": {
            "title": "納品書 単価",
            "nullable": true,
            "description": "同梱明細書に記載する「単価」。出荷依頼作成時に指定します。\n\n商品マスタに登録されている商品価格は自動入力されません。",
            "example": 1000
          },
          "price": {
            "title": "納品書 金額",
            "description": "同梱明細書に記載される「金額」。出荷依頼作成時に指定します。\n\n指定した値が同梱明細書に記載されます。計算の整合性のチェックは行われず、空欄の場合に自動計算、補完もされません。",
            "nullable": true,
            "example": 1000
          },
          "is_reduced_tax": {
            "type": "boolean",
            "title": "軽減税率適用商品",
            "description": "軽減税率が適用される商品の場合は`true`を指定します。\n\n何も指定しない場合は、商品マスタに登録されている軽減税率適用商品の設定が適用されます。",
            "example": true
          },
          "hs_code": {
            "type": "string",
            "pattern": "^\\d{4}\\.?\\d{2}((\\.|-)?\\d{3,4})?$",
            "title": "HSコード",
            "description": "海外へ発送する場合の商品のHSコード。出荷依頼作成時に指定します。",
            "example": "000000.000",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/249"
            }
          },
          "gift_wrapping_type": {
            "type": "string",
            "nullable": true,
            "enum": [
              "NAVY",
              "RED"
            ],
            "title": "ギフトラッピングタイプ",
            "description": "商品単位に指定するラッピングタイプ。出荷依頼作成時に指定します。\n\n- `NAVY`: ネイビー\n- `RED`: レッド",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/30"
            }
          },
          "cushioning_type": {
            "type": "string",
            "nullable": true,
            "enum": [
              "BUBBLE_PACK",
              "BUBBLE_DOUBLE_PACK"
            ],
            "title": "緩衝材種別",
            "description": "商品単位に指定する緩衝材の種別。出荷依頼作成時に指定します。\n\n- `BUBBLE_PACK`: プチプチ\n- `BUBBLE_DOUBLE_PACK`: プチプチ2重\n",
            "example": "BUBBLE_PACK",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/62"
            }
          },
          "backorder_if_unavailable": {
            "title": "商品単位の出荷予約フラグ",
            "type": "boolean",
            "default": false,
            "description": "在庫不足時、出荷予約として出荷依頼を作成できるようにします。商品単位の指定よりも、出荷単位の指定が優先されます。",
            "example": true
          }
        }
      },
      "InternationalSenderAddress": {
        "type": "object",
        "title": "海外出荷",
        "required": [
          "postcode",
          "prefecture",
          "address1",
          "name",
          "company",
          "phone"
        ],
        "properties": {
          "postcode": {
            "type": "string",
            "pattern": "^\\d{3}-?\\d{4}$",
            "title": "郵便番号"
          },
          "prefecture": {
            "type": "string",
            "maxLength": 9,
            "title": "都道府県"
          },
          "address1": {
            "type": "string",
            "maxLength": 64,
            "title": "住所"
          },
          "address2": {
            "type": "string",
            "maxLength": 64,
            "nullable": true,
            "title": "マンション・ビル名"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "氏名"
          },
          "company": {
            "type": "string",
            "maxLength": 255,
            "nullable": true,
            "title": "会社名"
          },
          "division": {
            "type": "string",
            "maxLength": 255,
            "nullable": true,
            "title": "部署名"
          },
          "phone": {
            "type": "string",
            "maxLength": 20,
            "title": "電話番号"
          }
        }
      },
      "SenderID": {
        "type": "object",
        "title": "依頼主マスタ指定",
        "required": [
          "uuid"
        ],
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "title": "依頼主UUID",
            "description": "管理画面で登録した依頼主をUUIDで指定することができます。\n`uuid`を指定すると、依頼主マスタとして登録している住所、氏名、お問合せ先、ロゴ画像、明細書メッセージ、発送通知メッセージが適用されます。\n\nUUIDは依頼主マスタ画面よりご確認ください。\n海外発送指定（`international`）がある場合は、海外発送用の依頼主を指定してください。\n\nこのプロパティを利用する場合は、`sender`の他のプロパティ、`message`と同時に指定できません。",
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/56"
            }
          }
        }
      },
      "SenderRequest": {
        "type": "object",
        "properties": {
          "sender": {
            "type": "object",
            "title": "発送元住所",
            "description": "省略時は管理画面でデフォルトの依頼主に設定されている情報が使われます。",
            "oneOf": [
              {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Address"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 15
                      },
                      "company": {
                        "type": "string",
                        "maxLength": 16,
                        "nullable": true
                      }
                    }
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/InternationalSenderAddress"
              },
              {
                "$ref": "#/components/schemas/SenderID"
              }
            ]
          }
        }
      },
      "ShipmentRequest": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "identifier",
              "recipient",
              "items"
            ],
            "properties": {
              "identifier": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100,
                "nullable": true,
                "title": "識別番号",
                "description": "ユーザーが出荷依頼をユニークに識別するための符号です。\nユーザーが任意に指定します。\n\n出荷依頼を作成する場合は、`identifier` と `order_no` のいずれかが必須となります。",
                "example": "2015-00001"
              },
              "order_no": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100,
                "nullable": true,
                "title": "注文番号",
                "description": "ECサイトなどの注文に紐づくユニークな固有の符号です。\n同梱明細書の「注文番号」に印刷されます。\n\n出荷依頼を作成する場合は、`identifier` と `order_no` のいずれかが必須となります。\n",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/289"
                },
                "example": "#12345-67890"
              },
              "subtotal_amount": {
                "title": "納品書 小計",
                "description": "同梱明細書に記載される「小計」。出荷依頼作成時に指定します。\n計算の整合性のチェックは行われず、空欄の場合に自動計算、補完もされません。",
                "nullable": true,
                "example": 1000
              },
              "delivery_charge": {
                "title": "納品書 配送料",
                "description": "同梱明細書に記載される「配送料」。出荷依頼作成時に指定します。",
                "nullable": true,
                "example": 500
              },
              "handling_charge": {
                "title": "納品書 手数料",
                "description": "同梱明細書に記載される「手数料」。出荷依頼作成時に指定します。",
                "nullable": true,
                "example": 0
              },
              "discount_amount": {
                "title": "納品書 割引額",
                "description": "同梱明細書に記載される「割引額」。出荷依頼作成時に指定します。",
                "nullable": true,
                "example": 0
              },
              "total_amount": {
                "title": "納品書 合計",
                "description": "同梱明細書に記載される「合計」。出荷依頼作成時に指定します。\n計算の整合性のチェックは行われず、空欄の場合に自動計算、補完もされません。",
                "nullable": true,
                "example": 1500
              },
              "cushioning_unit": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "ORDER",
                  "ITEM"
                ],
                "title": "緩衝材単位",
                "description": "注文単位、もしくは商品単位で緩衝材指定します。緩衝材は有料オプションで別途料金が発生します。\n\n- `ORDER`: 注文単位\n- `ITEM`: 商品単位",
                "example": "ORDER",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/62"
                }
              },
              "cushioning_type": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "BUBBLE_PACK",
                  "BUBBLE_DOUBLE_PACK"
                ],
                "title": "緩衝材種別",
                "description": "緩衝材単位を注文単位で利用する場合に指定します。\n「注文単位」を指定した場合は、緩衝材種別を下記から指定してください。\n\n- `BUBBLE_PACK`: プチプチ\n- `BUBBLE_DOUBLE_PACK`: プチプチ2重\n",
                "example": "BUBBLE_PACK",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/62"
                }
              },
              "gift_wrapping_unit": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "ORDER",
                  "ITEM"
                ],
                "title": "ギフトラッピング単位",
                "description": "注文単位、もしくは商品単位でラッピングします。ギフトラッピングは有料オプションで別途料金が発生します。\n\n- `ORDER`: 注文単位\n- `ITEM`: 商品単位",
                "example": "ITEM",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/30"
                }
              },
              "gift_wrapping_type": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "NAVY",
                  "RED"
                ],
                "title": "ギフトラッピングタイプ",
                "description": "ギフトラッピング単位を注文単位で利用する場合に、ラッピングの色を指定します。\n「注文単位」でラッピングする場合は、ギフトラッピングタイプを下記から指定します。\n\n- `NAVY`: ネイビー\n- `RED`: レッド",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/30"
                }
              },
              "gift_sender_name": {
                "type": "string",
                "nullable": true,
                "title": "ギフト贈り主氏名",
                "description": "同梱明細書や送り状の「贈り主」欄に記載される名前を指定します。",
                "example": "オープン太郎"
              },
              "bundled_items": {
                "type": "array",
                "minItems": 1,
                "maxItems": 5,
                "uniqueItems": true,
                "nullable": true,
                "title": "同梱指定",
                "description": "同梱物の商品IDまたは商品コード (重複のない5つまで指定できます)。",
                "items": {
                  "type": "string",
                  "example": "TS001-I000001"
                }
              },
              "shipping_email": {
                "type": "string",
                "format": "email",
                "nullable": true,
                "title": "配送先連絡メールアドレス",
                "description": "お届け先へお荷物発送のお知らせメールを送信したい場合に指定します。\n\n指定されたメールアドレス宛に「お荷物発送のお知らせ」メールをオープンロジドメインから自動送信します。\nこの項目が未指定または `null` の場合は、「発送通知メッセージ」が無効になります。",
                "example": "test@example.com",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/81"
                }
              },
              "delivery_note_type": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "NOT_INCLUDE_PII",
                  "NONE"
                ],
                "title": "明細書の同梱設定",
                "description": "明細書を同梱するかしないかを指定します。\n\n値がない場合は、出荷設定の同梱明細書の同梱設定に従います。\n\n- `NOT_INCLUDE_PII`: 住所非表示の明細書を同梱する\n- `NONE`: 同梱しない\n",
                "example": "NOT_INCLUDE_PII",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/70"
                }
              },
              "price_on_delivery_note": {
                "type": "boolean",
                "nullable": true,
                "title": "明細書への金額印字指定",
                "description": "明細書に金額を印字するかしないかを指定します。\n\n- `true`\n  - 明細書へ金額を印字する（この指定が他の設定よりも優先されます）\n- `false`\n  - 明細書へ金額を印字しない（この指定が他の設定よりも優先されます）\n- `null` または 未指定\n  - 管理画面の設定（【出荷設定】 > 【その他設定】 > 「同梱明細書の金額印字」）に従います。ただし、ギフトラッピングの場合は管理画面の設定に関わらず印字しません。",
                "example": true,
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/225"
                }
              },
              "message": {
                "type": "string",
                "maxLength": 500,
                "nullable": true,
                "title": "明細書メッセージ",
                "description": "同梱明細書に記載するメッセージです。\n\n依頼主マスタで設定している明細書メッセージを上書きする場合に利用します。\nただし、依頼主UUID（`sender.uuid`）を指定した出荷依頼の場合は、`message`での上書きはできません。",
                "example": "お買上げありがとうございます。"
              },
              "suspend": {
                "type": "boolean",
                "title": "保留フラグ",
                "description": "`true`は、出荷作業が開始されない保留状態を表します。\n\n保留状態の出荷依頼は、保留解除しない限り出荷作業が開始されません。\nただし、保留状態の出荷依頼にも在庫は引き当てられます。\n\n出荷作業を開始したくない場合に、出荷依頼時に`true`を指定します。\n保留状態を解除するには、[出荷依頼更新](#tag/shipments/operation/putShipment)を利用してください。",
                "default": false,
                "example": false,
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/213"
                }
              },
              "shipping_date": {
                "type": "string",
                "format": "date",
                "title": "出荷希望日",
                "description": "指定された日付以降に倉庫で出荷作業が行われます。倉庫の作業状況次第では希望日の翌日以降での出荷となる場合があります。\n\nお届け希望日を指定したい場合は、`delivery_date`をご利用ください。\n`delivery_date`と同時に指定された場合、「`shipping_date` < `delivery_date` <= `shipping_date` + 7日（クール便は3日）」を満たす必要があります。",
                "example": "2019-04-02",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/203"
                }
              },
              "tax": {
                "type": "integer",
                "maximum": 999999999,
                "title": "消費税",
                "description": "同梱明細書に記載される「消費税」。出荷依頼作成時に指定します。\n\n【出荷】 > 【出荷設定】 > 【その他の設定】 > 「消費税設定」が「税抜」の場合にだけ、指定します。",
                "nullable": true,
                "example": 100
              },
              "total_with_normal_tax": {
                "type": "integer",
                "maximum": 999999999,
                "title": "合計通常税率",
                "description": "「合計」のうち消費税10%が適用される金額。出荷依頼作成時に指定します。\n\n「軽減税率適用商品」が含まれる場合のみ、指定した値が同梱明細書に記載されます。計算の整合性のチェックは行われず、空欄の場合に自動計算、補完もされません。",
                "example": 1000
              },
              "total_with_reduced_tax": {
                "type": "integer",
                "maximum": 999999999,
                "title": "合計軽減税率",
                "description": "「合計」のうち軽減税率の消費税8%が適用される金額。出荷依頼作成時に指定します。\n\n「軽減税率適用商品」が含まれる場合のみ、指定した値が同梱明細書に記載されます。計算の整合性のチェックは行われず、空欄の場合に自動計算、補完もされません。",
                "example": 500
              },
              "delivery_carrier": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "YAMATO",
                  "SAGAWA"
                ],
                "title": "配送会社",
                "description": "配送会社を指示したい場合に指定します。\n\n国内発送の場合に指定でき、指定すると別途料金が発生します。\n\n- `YAMATO`: ヤマト運輸\n- `SAGAWA`: 佐川急便\n",
                "example": "YAMATO",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/67"
                }
              },
              "delivery_time_slot": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "AM",
                  "12",
                  "14",
                  "16",
                  "18",
                  "19"
                ],
                "title": "希望時間指定",
                "description": "国内発送の場合に、配達の時間帯を指示したい場合に指定します。\n\n- `AM`: 午前中\n- `12`: 12時〜14時（佐川急便のみ指定可能）\n- `14`: 14時〜16時\n- `16`: 16時〜18時\n- `18`: 18時〜20時\n- `19`: 19時〜21時\n",
                "example": "AM",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/75"
                }
              },
              "delivery_date": {
                "type": "string",
                "format": "date",
                "nullable": true,
                "title": "配達希望日",
                "description": "国内発送の場合に、お届け希望日を指示したい場合に指定します。\n\n出荷作業の開始日を指定したい場合は、`shipping_date`をご利用ください。\n",
                "example": "2019-04-05",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/96"
                }
              },
              "cash_on_delivery": {
                "type": "boolean",
                "title": "代金引換指定",
                "description": "`true`を指定したときだけ代金引換となります。代金引換を利用する場合は、事前に配送会社とサービス契約している必要があります。",
                "default": false,
                "example": false
              },
              "total_for_cash_on_delivery": {
                "type": "integer",
                "maximum": 999999999,
                "title": "代金引換総計",
                "description": "配送先に請求する、消費税や送料、手数料なども含めた代引きの請求金額。出荷依頼作成時に指定します。\n代金引換の場合のみ指定します。",
                "example": 1100
              },
              "tax_for_cash_on_delivery": {
                "type": "integer",
                "maximum": 999999999,
                "title": "代金引換消費税",
                "description": "代金引換総計のうち、消費税に当たる金額。出荷依頼作成時に指定します。\n代金引換の場合のみ指定します。",
                "example": 100
              },
              "delivery_method": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "POST_EXPRESS",
                  "HOME_BOX"
                ],
                "title": "配送便指定",
                "description": "SSサイズの商品、入荷実績のない商品で「配送便」を指定したい場合に指定します。\nSSサイズの商品のみ、かつポスト便のサイズに収まった場合に、このパラメータの省略時には`POST_EXPRESS`が設定されます。\n\n- `POST_EXPRESS`: ポスト便 (宅配便スピード)での配送 (SSサイズの商品で指定可能)\n- `HOME_BOX`: 宅配便 (段ボール梱包)での配送\n",
                "example": "HOME_BOX",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/212"
                }
              },
              "delivery_options": {
                "$ref": "#/components/schemas/DeliveryOption"
              },
              "warehouse": {
                "type": "string",
                "nullable": true,
                "title": "倉庫コード",
                "description": "出荷する倉庫をコードで指定します。未指定または null を指定した場合は、標準倉庫から出荷されます。",
                "example": "OPL"
              },
              "items": {
                "type": "array",
                "title": "配送商品リスト",
                "description": "出荷したい商品を指定します。同梱物を指定する場合は、`bundled_items`を利用します。\n",
                "items": {
                  "$ref": "#/components/schemas/components-schemas-ItemRequest"
                }
              },
              "international": {
                "type": "boolean",
                "title": "海外発送指定",
                "default": false,
                "description": "海外発送する場合は、`true`を指定します。",
                "example": false
              },
              "delivery_service": {
                "type": "string",
                "description": "海外配送（`international`が`true`）の場合は必須です。\n\nSagawa\n  - SAGAWA-HIKYAKU-YU-PACKET 佐川急便 飛脚ゆうパケット\n  - SAGAWA-TAKUHAIBIN 佐川急便 宅配便\n  - SAGAWA-COOLBIN 佐川急便 飛脚クール便\n\nYamato\n  - YAMATO-NEKOPOSU ヤマト運輸 ネコポス\n  - YAMATO-TAKKYUBIN ヤマト運輸 宅急便\n  - YAMATO-COOLBIN ヤマト運輸 クール便\n\nJapan Post\n  - JAPANPOST-EMS EMS\n  - JAPANPOST-EPACKET 小形包装物 書留\n  - JAPANPOST-YU-PACKET 日本郵便 ゆうパケット\n\nFedex\n  - FEDEX-PRIORITY FedEx International Priority\n  - FEDEX-CONNECT-PLUS FedEx International Connect Plus\n\nDHL\n  - DHL-EXPRESS DHL Express\n",
                "enum": [
                  "SAGAWA-HIKYAKU-YU-PACKET",
                  "SAGAWA-TAKUHAIBIN",
                  "SAGAWA-COOLBIN",
                  "YAMATO-NEKOPOSU",
                  "YAMATO-TAKKYUBIN",
                  "YAMATO-COOLBIN",
                  "JAPANPOST-EMS",
                  "JAPANPOST-EPACKET",
                  "JAPANPOST-YU-PACKET",
                  "FEDEX-PRIORITY",
                  "FEDEX-CONNECT-PLUS",
                  "DHL-EXPRESS"
                ],
                "example": "JAPANPOST-EMS"
              },
              "currency_code": {
                "type": "string",
                "title": "海外発送用通貨コード",
                "description": "商品単価や合計金額で利用する通貨。\n海外配送（`international`が`true`）の場合は必須です。\n\n指定できる値は、[通貨情報API](#tag/shipments/operation/getInternationalCurrency)を参照してください。",
                "example": "JP"
              },
              "insurance": {
                "type": "boolean",
                "title": "海外発送用損害保証制度の加入希望",
                "description": "海外配送（`international`が`true`）の場合は必須です。\n\n損害保証制度の加入希望がある場合は`true`を指定します。",
                "example": false,
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/10"
                }
              },
              "backorder_if_unavailable": {
                "title": "出荷単位の出荷予約フラグ",
                "type": "boolean",
                "default": false,
                "description": "在庫不足時、出荷予約として出荷依頼を作成できるようにします。商品単位の指定よりも、出荷単位の指定が優先されます。",
                "example": true
              },
              "purpose": {
                "type": "string",
                "enum": [
                  "GIFT",
                  "DOCUMENTS",
                  "COMMERCIAL_SAMPLE",
                  "SALE_OF_GOODS",
                  "RETURNED_GOODS",
                  "OTHERS"
                ],
                "title": "輸出目的",
                "description": "EMS/小形包装物 書留/DHL/Fedexの場合に指定します。\n輸出目的が指す品目と実際の商品とが異なる場合には、通関手続きができない場合があります。\n\n未指定の場合、【管理画面】 > 【設定】> 【配送情報】> 【配送設定】 > 「輸出目的設定」で選択した項目が適用されます。\n\n- `GIFT` : 贈物\n- `DOCUMENTS` : 書類\n- `COMMERCIAL_SAMPLE` : 商品見本\n- `SALE_OF_GOODS` : 販売品\n- `RETURNED_GOODS` : 返送品\n- `OTHERS` : その他\n",
                "example": "SALE_OF_GOODS"
              },
              "allocate_priority": {
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "title": "引当優先順位",
                "description": "出荷依頼に対して、出荷の商品単位で配送可在庫を確保する処理（引当）をオープンロジで行なっています。\n数字が大きいほど、優先的に引当されます。",
                "example": 0,
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/294"
                }
              },
              "tax_number": {
                "type": "string",
                "title": "納税者番号",
                "minLength": 2,
                "maxLength": 30,
                "description": "一部の海外配送先の場合に、インボイスに記載が必要となる納税者番号",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/257"
                }
              }
            }
          },
          {
            "$ref": "#/components/schemas/SenderRequest"
          },
          {
            "$ref": "#/components/schemas/Recipient"
          }
        ]
      },
      "PostShipmentRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ShipmentRequest"
          },
          {
            "type": "object",
            "properties": {
              "apply_rule": {
                "type": "boolean",
                "title": "出荷ルール適用フラグ",
                "description": "出荷ルールによる商品追加で在庫不足が発生する場合、出荷依頼単位の`backorder_if_unavailable`に`true`を指定します。\n",
                "example": true,
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/101"
                }
              }
            }
          }
        ]
      },
      "PostShipmentResponse": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "string",
                "title": "出荷ID",
                "description": "オープンロジで出荷依頼を作成した際に自動で生成され、出荷依頼ごとに割り当てられる固有のIDです。",
                "example": "TS001-S000001",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/269"
                }
              },
              "identifier": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100,
                "nullable": true,
                "title": "識別番号",
                "description": "ユーザーが出荷依頼をユニークに識別するための符号です。\nユーザーが任意に指定します。\n\n出荷依頼を作成する場合は、`identifier` と `order_no` のいずれかが必須となります。",
                "example": "2015-00001"
              },
              "order_no": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100,
                "nullable": true,
                "title": "注文番号",
                "description": "ECサイトなどの注文に紐づくユニークな固有の符号です。\n同梱明細書の「注文番号」に印刷されます。\n\n出荷依頼を作成する場合は、`identifier` と `order_no` のいずれかが必須となります。\n",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/289"
                },
                "example": "#12345-67890"
              },
              "subtotal_amount": {
                "title": "納品書 小計",
                "description": "同梱明細書に記載される「小計」。出荷依頼作成時に指定します。\n計算の整合性のチェックは行われず、空欄の場合に自動計算、補完もされません。",
                "nullable": true,
                "example": 1000
              },
              "delivery_charge": {
                "title": "納品書 配送料",
                "description": "同梱明細書に記載される「配送料」。出荷依頼作成時に指定します。",
                "nullable": true,
                "example": 500
              },
              "handling_charge": {
                "title": "納品書 手数料",
                "description": "同梱明細書に記載される「手数料」。出荷依頼作成時に指定します。",
                "nullable": true,
                "example": 0
              },
              "discount_amount": {
                "title": "納品書 割引額",
                "description": "同梱明細書に記載される「割引額」。出荷依頼作成時に指定します。",
                "nullable": true,
                "example": 0
              },
              "total_amount": {
                "title": "納品書 合計",
                "description": "同梱明細書に記載される「合計」。出荷依頼作成時に指定します。\n計算の整合性のチェックは行われず、空欄の場合に自動計算、補完もされません。",
                "nullable": true,
                "example": 1500
              },
              "cushioning_unit": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "ORDER",
                  "ITEM"
                ],
                "title": "緩衝材単位",
                "description": "注文単位、もしくは商品単位で緩衝材指定します。緩衝材は有料オプションで別途料金が発生します。\n\n- `ORDER`: 注文単位\n- `ITEM`: 商品単位",
                "example": "ORDER",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/62"
                }
              },
              "cushioning_type": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "BUBBLE_PACK",
                  "BUBBLE_DOUBLE_PACK"
                ],
                "title": "緩衝材種別",
                "description": "緩衝材単位を注文単位で利用する場合に指定します。\n「注文単位」を指定した場合は、緩衝材種別を下記から指定してください。\n\n- `BUBBLE_PACK`: プチプチ\n- `BUBBLE_DOUBLE_PACK`: プチプチ2重\n",
                "example": "BUBBLE_PACK",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/62"
                }
              },
              "gift_wrapping_unit": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "ORDER",
                  "ITEM"
                ],
                "title": "ギフトラッピング単位",
                "description": "注文単位、もしくは商品単位でラッピングします。ギフトラッピングは有料オプションで別途料金が発生します。\n\n- `ORDER`: 注文単位\n- `ITEM`: 商品単位",
                "example": "ITEM",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/30"
                }
              },
              "gift_wrapping_type": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "NAVY",
                  "RED"
                ],
                "title": "ギフトラッピングタイプ",
                "description": "ギフトラッピング単位を注文単位で利用する場合に、ラッピングの色を指定します。\n「注文単位」でラッピングする場合は、ギフトラッピングタイプを下記から指定します。\n\n- `NAVY`: ネイビー\n- `RED`: レッド",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/30"
                }
              },
              "gift_sender_name": {
                "type": "string",
                "nullable": true,
                "title": "ギフト贈り主氏名",
                "description": "同梱明細書や送り状の「贈り主」欄に記載される名前を指定します。",
                "example": "オープン太郎"
              },
              "bundled_items": {
                "type": "array",
                "minItems": 1,
                "maxItems": 5,
                "uniqueItems": true,
                "nullable": true,
                "title": "同梱指定",
                "description": "同梱物の商品IDまたは商品コード (重複のない5つまで指定できます)。",
                "items": {
                  "type": "string",
                  "example": "TS001-I000001"
                }
              },
              "fba_shipment_id": {
                "type": "string",
                "title": "FBA納品番号",
                "description": "FBA納品向けの出荷の場合に、FBA納品番号がセットされます。",
                "example": "FBA123456789",
                "nullable": true
              },
              "shipping_email": {
                "type": "string",
                "format": "email",
                "nullable": true,
                "title": "配送先連絡メールアドレス",
                "description": "お届け先へお荷物発送のお知らせメールを送信したい場合に指定します。\n\n指定されたメールアドレス宛に「お荷物発送のお知らせ」メールをオープンロジドメインから自動送信します。\nこの項目が未指定または `null` の場合は、「発送通知メッセージ」が無効になります。",
                "example": "test@example.com",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/81"
                }
              },
              "delivery_note_type": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "NOT_INCLUDE_PII",
                  "NONE"
                ],
                "title": "明細書の同梱設定",
                "description": "明細書を同梱するかしないかを指定します。\n\n値がない場合は、出荷設定の同梱明細書の同梱設定に従います。\n\n- `NOT_INCLUDE_PII`: 住所非表示の明細書を同梱する\n- `NONE`: 同梱しない\n",
                "example": "NOT_INCLUDE_PII",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/70"
                }
              },
              "price_on_delivery_note": {
                "type": "boolean",
                "nullable": true,
                "title": "明細書への金額印字指定",
                "description": "明細書に金額を印字するかしないかを指定します。\n\n- `true`\n  - 明細書へ金額を印字する（この指定が他の設定よりも優先されます）\n- `false`\n  - 明細書へ金額を印字しない（この指定が他の設定よりも優先されます）\n- `null` または 未指定\n  - 管理画面の設定（【出荷設定】 > 【その他設定】 > 「同梱明細書の金額印字」）に従います。ただし、ギフトラッピングの場合は管理画面の設定に関わらず印字しません。",
                "example": true,
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/225"
                }
              },
              "message": {
                "type": "string",
                "maxLength": 500,
                "nullable": true,
                "title": "明細書メッセージ",
                "description": "同梱明細書に記載するメッセージです。\n\n依頼主マスタで設定している明細書メッセージを上書きする場合に利用します。\nただし、依頼主UUID（`sender.uuid`）を指定した出荷依頼の場合は、`message`での上書きはできません。",
                "example": "お買上げありがとうございます。"
              },
              "status": {
                "type": "string",
                "enum": [
                  "backordered",
                  "allocating",
                  "waiting",
                  "working",
                  "picking",
                  "picked",
                  "packed",
                  "shipped",
                  "suspended",
                  "modify_request",
                  "cancel_request"
                ],
                "title": "出荷ステータス",
                "description": "出荷状況を確認できます。\n出荷依頼は営業日の9:00と12:30に倉庫側にデータが取り込まれ、作業されます。\n\n`backordered` : 入荷待ち\n\n`allocating` : 引当中(`X-Api-Version` が `1.3` の場合)\n\n`waiting` : 引当済\n\n`working` : ピッキング中または検品済(`X-Api-Version` が `1.3` の場合)\n\n`picking` : ピッキング中(`X-Api-Version` が `1.4` 以降の場合)\n\n`picked` : 検品済(`X-Api-Version` が `1.4` 以降の場合)\n\n`packed` : 梱包済\n\n`shipped` : 出荷済\n\n`suspended` : 保留\n\n`modify_request` : 変更依頼中\n\n`cancel_request` : キャンセル依頼中\n",
                "example": "waiting",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/49"
                }
              },
              "suspend": {
                "type": "boolean",
                "title": "保留フラグ",
                "description": "`true`は、出荷作業が開始されない保留状態を表します。\n\n保留状態の出荷依頼は、保留解除しない限り出荷作業が開始されません。\nただし、保留状態の出荷依頼にも在庫は引き当てられます。\n\n出荷作業を開始したくない場合に、出荷依頼時に`true`を指定します。\n保留状態を解除するには、[出荷依頼更新](#tag/shipments/operation/putShipment)を利用してください。",
                "default": false,
                "example": false,
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/213"
                }
              },
              "label_note": {
                "type": "string",
                "title": "品名",
                "description": "国内配送の送り状に記載される商品種別。\n\n出荷依頼作成時に、デフォルト品名（【出荷設定】 > 【その他設定】 > 「品名設定」）が未設定の場合に必須です。\n設定済みの場合は、その値が自動で使用されます。\n",
                "example": "玩具",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/21"
                }
              },
              "shipping_date": {
                "type": "string",
                "format": "date",
                "title": "出荷希望日",
                "description": "指定された日付以降に倉庫で出荷作業が行われます。倉庫の作業状況次第では希望日の翌日以降での出荷となる場合があります。\n\nお届け希望日を指定したい場合は、`delivery_date`をご利用ください。\n`delivery_date`と同時に指定された場合、「`shipping_date` < `delivery_date` <= `shipping_date` + 7日（クール便は3日）」を満たす必要があります。",
                "example": "2019-04-02",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/203"
                }
              },
              "assigned_shipping_date": {
                "type": "string",
                "format": "date",
                "title": "発送予定日",
                "description": "配送会社へ引き渡す予定の日付で、変動する場合があります。",
                "example": "2019-04-02"
              },
              "tax_included": {
                "type": "boolean",
                "title": "税込みフラグ",
                "description": "商品の登録価格、出荷明細の表示金額が税込み（`true`)か税抜き（`false`)かを表します。\n出荷依頼作成時の【出荷】 > 【出荷設定】 > 【その他設定】 > 「消費税設定」の設定内容が反映されます。",
                "example": true
              },
              "tax": {
                "type": "integer",
                "maximum": 999999999,
                "title": "消費税",
                "description": "同梱明細書に記載される「消費税」。出荷依頼作成時に指定します。\n\n【出荷】 > 【出荷設定】 > 【その他の設定】 > 「消費税設定」が「税抜」の場合にだけ、指定します。",
                "nullable": true,
                "example": 100
              },
              "total_with_normal_tax": {
                "type": "integer",
                "maximum": 999999999,
                "title": "合計通常税率",
                "description": "「合計」のうち消費税10%が適用される金額。出荷依頼作成時に指定します。\n\n「軽減税率適用商品」が含まれる場合のみ、指定した値が同梱明細書に記載されます。計算の整合性のチェックは行われず、空欄の場合に自動計算、補完もされません。",
                "example": 1000
              },
              "total_with_reduced_tax": {
                "type": "integer",
                "maximum": 999999999,
                "title": "合計軽減税率",
                "description": "「合計」のうち軽減税率の消費税8%が適用される金額。出荷依頼作成時に指定します。\n\n「軽減税率適用商品」が含まれる場合のみ、指定した値が同梱明細書に記載されます。計算の整合性のチェックは行われず、空欄の場合に自動計算、補完もされません。",
                "example": 500
              },
              "delivery_carrier": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "YAMATO",
                  "SAGAWA"
                ],
                "title": "配送会社",
                "description": "配送会社を指示したい場合に指定します。\n\n国内発送の場合に指定でき、指定すると別途料金が発生します。\n\n- `YAMATO`: ヤマト運輸\n- `SAGAWA`: 佐川急便\n",
                "example": "YAMATO",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/67"
                }
              },
              "delivery_time_slot": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "AM",
                  "12",
                  "14",
                  "16",
                  "18",
                  "19"
                ],
                "title": "希望時間指定",
                "description": "国内発送の場合に、配達の時間帯を指示したい場合に指定します。\n\n- `AM`: 午前中\n- `12`: 12時〜14時（佐川急便のみ指定可能）\n- `14`: 14時〜16時\n- `16`: 16時〜18時\n- `18`: 18時〜20時\n- `19`: 19時〜21時\n",
                "example": "AM",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/75"
                }
              },
              "delivery_date": {
                "type": "string",
                "format": "date",
                "nullable": true,
                "title": "配達希望日",
                "description": "国内発送の場合に、お届け希望日を指示したい場合に指定します。\n\n出荷作業の開始日を指定したい場合は、`shipping_date`をご利用ください。\n",
                "example": "2019-04-05",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/96"
                }
              },
              "delivery_day": {
                "type": "string",
                "format": "date",
                "nullable": true,
                "title": "お届け予定日",
                "description": "出荷前、海外や離島へのお届けの場合に`null`（お届け予定なし）となります。",
                "example": "2019-04-05"
              },
              "cash_on_delivery": {
                "type": "boolean",
                "title": "代金引換指定",
                "description": "`true`を指定したときだけ代金引換となります。代金引換を利用する場合は、事前に配送会社とサービス契約している必要があります。",
                "default": false,
                "example": false
              },
              "total_for_cash_on_delivery": {
                "type": "integer",
                "maximum": 999999999,
                "title": "代金引換総計",
                "description": "配送先に請求する、消費税や送料、手数料なども含めた代引きの請求金額。出荷依頼作成時に指定します。\n代金引換の場合のみ指定します。",
                "example": 1100
              },
              "tax_for_cash_on_delivery": {
                "type": "integer",
                "maximum": 999999999,
                "title": "代金引換消費税",
                "description": "代金引換総計のうち、消費税に当たる金額。出荷依頼作成時に指定します。\n代金引換の場合のみ指定します。",
                "example": 100
              },
              "delivery_method": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "POST_EXPRESS",
                  "HOME_BOX"
                ],
                "title": "配送便指定",
                "description": "SSサイズの商品、入荷実績のない商品で「配送便」を指定したい場合に指定します。\nSSサイズの商品のみ、かつポスト便のサイズに収まった場合に、このパラメータの省略時には`POST_EXPRESS`が設定されます。\n\n- `POST_EXPRESS`: ポスト便 (宅配便スピード)での配送 (SSサイズの商品で指定可能)\n- `HOME_BOX`: 宅配便 (段ボール梱包)での配送\n",
                "example": "HOME_BOX",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/212"
                }
              },
              "delivery_options": {
                "$ref": "#/components/schemas/DeliveryOption"
              },
              "bundle_shipping_label": {
                "type": "string",
                "title": "引き取り交換フラグ",
                "description": "引き取り交換で出荷する場合に`true`になります。",
                "nullable": true
              },
              "warehouse": {
                "type": "string",
                "title": "倉庫コード",
                "description": "出荷作業が行われる倉庫のコード",
                "nullable": true,
                "example": "OPL"
              },
              "items": {
                "type": "array",
                "description": "配送商品リスト",
                "items": {
                  "$ref": "#/components/schemas/components-schemas-ItemResponse"
                }
              },
              "purpose": {
                "type": "string",
                "enum": [
                  "GIFT",
                  "DOCUMENTS",
                  "COMMERCIAL_SAMPLE",
                  "SALE_OF_GOODS",
                  "RETURNED_GOODS",
                  "OTHERS"
                ],
                "title": "輸出目的",
                "description": "EMS/小形包装物 書留/DHL/Fedexの場合に指定します。\n輸出目的が指す品目と実際の商品とが異なる場合には、通関手続きができない場合があります。\n\n未指定の場合、【管理画面】 > 【設定】> 【配送情報】> 【配送設定】 > 「輸出目的設定」で選択した項目が適用されます。\n\n- `GIFT` : 贈物\n- `DOCUMENTS` : 書類\n- `COMMERCIAL_SAMPLE` : 商品見本\n- `SALE_OF_GOODS` : 販売品\n- `RETURNED_GOODS` : 返送品\n- `OTHERS` : その他\n",
                "example": "SALE_OF_GOODS"
              },
              "allocate_priority": {
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "title": "引当優先順位",
                "description": "出荷依頼に対して、出荷の商品単位で配送可在庫を確保する処理（引当）をオープンロジで行なっています。\n数字が大きいほど、優先的に引当されます。",
                "example": 0,
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/294"
                }
              },
              "tax_number": {
                "type": "string",
                "title": "納税者番号",
                "minLength": 2,
                "maxLength": 30,
                "description": "一部の海外配送先の場合に、インボイスに記載が必要となる納税者番号",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/257"
                }
              }
            }
          },
          {
            "$ref": "#/components/schemas/Sender"
          },
          {
            "$ref": "#/components/schemas/Recipient"
          }
        ]
      },
      "PostShipmentsRequest": {
        "required": [
          "shipments"
        ],
        "type": "object",
        "properties": {
          "shipments": {
            "title": "出荷依頼リスト",
            "description": "一括で登録したい出荷依頼の配列です。",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShipmentRequest"
            }
          },
          "apply_rule": {
            "type": "boolean",
            "title": "出荷ルール適用フラグ",
            "description": "出荷ルールによる商品追加で在庫不足が発生する場合、出荷依頼単位の`backorder_if_unavailable`に`true`を指定します。\n",
            "example": true,
            "externalDocs": {
              "description": "詳細はこちらのページをご確認ください。",
              "url": "https://help.openlogi.com/faq/show/101"
            }
          }
        }
      },
      "ModifyShipmentRequest": {
        "type": "object",
        "required": [
          "identifier",
          "items"
        ],
        "properties": {
          "recipient": {
            "type": "object",
            "description": "発送先住所 (海外出荷の場合はregion_codeを指定する必要が有ります)",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address"
              },
              {
                "$ref": "#/components/schemas/InternationalAddress"
              }
            ]
          },
          "delivery_time_slot": {
            "type": "string",
            "enum": [
              "AM",
              "12",
              "14",
              "16",
              "18",
              "19"
            ],
            "description": "希望時間指定 (12はSAGAWAの場合のみ)",
            "example": "12"
          },
          "delivery_date": {
            "type": "string",
            "description": "配達希望日 (指定できる最短日付は配送会社によって変わります)",
            "example": "2019-04-05"
          }
        }
      },
      "WarehouseBaseTransferAddress": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "maxLength": 32,
                "description": "文字数制限があります。\n- ヤマト運輸で配送する場合: 全角16文字、半角32文字以内\n- それ以外で配送する場合: 全角12文字、半角25文字以内\n\n配送キャリアごとの制限を事前にご確認願います。"
              },
              "company": {
                "type": "string",
                "maxLength": 50,
                "nullable": true,
                "description": "文字数制限があります。\n- ヤマト運輸をご指定の場合: 全角25文字、半角50文字以内\n- それ以外の場合: 全角12文字、半角25文字以内\n\n配送キャリアごとの制限を事前にご確認願います。"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Address"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "maxLength": 32
              },
              "company": {
                "type": "string",
                "maxLength": 50,
                "nullable": true
              }
            }
          }
        ]
      },
      "WarehouseBaseTransferSender": {
        "type": "object",
        "properties": {
          "sender": {
            "type": "object",
            "title": "発送元住所",
            "description": "発送元倉庫の住所が自動で設定されます。",
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseBaseTransferAddress"
              }
            ]
          }
        }
      },
      "WarehouseBaseTransferRecipient": {
        "type": "object",
        "properties": {
          "recipient": {
            "type": "object",
            "title": "発送先住所",
            "description": "発送先倉庫の住所が自動で設定されます。",
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseBaseTransferAddress"
              }
            ]
          }
        }
      },
      "TransferResponse": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "id",
              "warehouse",
              "items"
            ],
            "properties": {
              "id": {
                "type": "string",
                "description": "出荷ID",
                "example": "TS001-S000001"
              },
              "identifier": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100,
                "nullable": true,
                "title": "識別番号",
                "description": "ユーザーが出荷依頼をユニークに識別するための符号です。\nユーザーが任意に指定します。\n\n出荷依頼を作成する場合は、`identifier` と `order_no` のいずれかが必須となります。",
                "example": "2015-00001"
              },
              "order_no": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100,
                "nullable": true,
                "title": "注文番号",
                "description": "ECサイトなどの注文に紐づくユニークな固有の符号です。\n同梱明細書の「注文番号」に印刷されます。\n\n出荷依頼を作成する場合は、`identifier` と `order_no` のいずれかが必須となります。\n",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/289"
                },
                "example": "#12345-67890"
              },
              "subtotal_amount": {
                "title": "納品書 小計",
                "description": "同梱明細書に記載される「小計」。出荷依頼作成時に指定します。\n計算の整合性のチェックは行われず、空欄の場合に自動計算、補完もされません。",
                "nullable": true,
                "example": 1000
              },
              "delivery_charge": {
                "title": "納品書 配送料",
                "description": "同梱明細書に記載される「配送料」。出荷依頼作成時に指定します。",
                "nullable": true,
                "example": 500
              },
              "handling_charge": {
                "title": "納品書 手数料",
                "description": "同梱明細書に記載される「手数料」。出荷依頼作成時に指定します。",
                "nullable": true,
                "example": 0
              },
              "discount_amount": {
                "title": "納品書 割引額",
                "description": "同梱明細書に記載される「割引額」。出荷依頼作成時に指定します。",
                "nullable": true,
                "example": 0
              },
              "total_amount": {
                "title": "納品書 合計",
                "description": "同梱明細書に記載される「合計」。出荷依頼作成時に指定します。\n計算の整合性のチェックは行われず、空欄の場合に自動計算、補完もされません。",
                "nullable": true,
                "example": 1500
              },
              "cushioning_unit": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "ORDER",
                  "ITEM"
                ],
                "title": "緩衝材単位",
                "description": "注文単位、もしくは商品単位で緩衝材指定します。緩衝材は有料オプションで別途料金が発生します。\n\n- `ORDER`: 注文単位\n- `ITEM`: 商品単位",
                "example": "ORDER",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/62"
                }
              },
              "cushioning_type": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "BUBBLE_PACK",
                  "BUBBLE_DOUBLE_PACK"
                ],
                "title": "緩衝材種別",
                "description": "緩衝材単位を注文単位で利用する場合に指定します。\n「注文単位」を指定した場合は、緩衝材種別を下記から指定してください。\n\n- `BUBBLE_PACK`: プチプチ\n- `BUBBLE_DOUBLE_PACK`: プチプチ2重\n",
                "example": "BUBBLE_PACK",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/62"
                }
              },
              "gift_wrapping_unit": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "ORDER",
                  "ITEM"
                ],
                "title": "ギフトラッピング単位",
                "description": "注文単位、もしくは商品単位でラッピングします。ギフトラッピングは有料オプションで別途料金が発生します。\n\n- `ORDER`: 注文単位\n- `ITEM`: 商品単位",
                "example": "ITEM",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/30"
                }
              },
              "gift_wrapping_type": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "NAVY",
                  "RED"
                ],
                "title": "ギフトラッピングタイプ",
                "description": "ギフトラッピング単位を注文単位で利用する場合に、ラッピングの色を指定します。\n「注文単位」でラッピングする場合は、ギフトラッピングタイプを下記から指定します。\n\n- `NAVY`: ネイビー\n- `RED`: レッド",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/30"
                }
              },
              "gift_sender_name": {
                "type": "string",
                "nullable": true,
                "title": "ギフト贈り主氏名",
                "description": "同梱明細書や送り状の「贈り主」欄に記載される名前を指定します。",
                "example": "オープン太郎"
              },
              "bundled_items": {
                "type": "array",
                "minItems": 1,
                "maxItems": 5,
                "uniqueItems": true,
                "nullable": true,
                "title": "同梱指定",
                "description": "同梱物の商品IDまたは商品コード (重複のない5つまで指定できます)。",
                "items": {
                  "type": "string",
                  "example": "TS001-I000001"
                }
              },
              "fba_shipment_id": {
                "type": "string",
                "description": "FBA納品番号",
                "example": "FBA123456789",
                "nullable": true
              },
              "shipping_email": {
                "type": "string",
                "format": "email",
                "nullable": true,
                "title": "配送先連絡メールアドレス",
                "description": "お届け先へお荷物発送のお知らせメールを送信したい場合に指定します。\n\n指定されたメールアドレス宛に「お荷物発送のお知らせ」メールをオープンロジドメインから自動送信します。\nこの項目が未指定または `null` の場合は、「発送通知メッセージ」が無効になります。",
                "example": "test@example.com",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/81"
                }
              },
              "delivery_note_type": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "NOT_INCLUDE_PII",
                  "NONE"
                ],
                "title": "明細書の同梱設定",
                "description": "明細書を同梱するかしないかを指定します。\n\n値がない場合は、出荷設定の同梱明細書の同梱設定に従います。\n\n- `NOT_INCLUDE_PII`: 住所非表示の明細書を同梱する\n- `NONE`: 同梱しない\n",
                "example": "NOT_INCLUDE_PII",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/70"
                }
              },
              "price_on_delivery_note": {
                "type": "boolean",
                "nullable": true,
                "title": "明細書への金額印字指定",
                "description": "明細書に金額を印字するかしないかを指定します。\n\n- `true`\n  - 明細書へ金額を印字する（この指定が他の設定よりも優先されます）\n- `false`\n  - 明細書へ金額を印字しない（この指定が他の設定よりも優先されます）\n- `null` または 未指定\n  - 管理画面の設定（【出荷設定】 > 【その他設定】 > 「同梱明細書の金額印字」）に従います。ただし、ギフトラッピングの場合は管理画面の設定に関わらず印字しません。",
                "example": true,
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/225"
                }
              },
              "message": {
                "type": "string",
                "maxLength": 500,
                "nullable": true,
                "title": "明細書メッセージ",
                "description": "同梱明細書に記載するメッセージです。\n\n依頼主マスタで設定している明細書メッセージを上書きする場合に利用します。\nただし、依頼主UUID（`sender.uuid`）を指定した出荷依頼の場合は、`message`での上書きはできません。",
                "example": "お買上げありがとうございます。"
              },
              "status": {
                "type": "string",
                "enum": [
                  "backordered",
                  "allocating",
                  "waiting",
                  "working",
                  "picking",
                  "picked",
                  "packed",
                  "shipped",
                  "suspended",
                  "modify_request",
                  "cancel_request"
                ],
                "description": "出荷ステータス\n\n`backordered` : 入荷待ち\n\n`allocating` : 引当中(`X-Api-Version` が `1.3` の場合)\n\n`waiting` : 引当済\n\n`working` : ピッキング中または検品済(`X-Api-Version` が `1.3` の場合)\n\n`picking` : ピッキング中(`X-Api-Version` が `1.4` 以降の場合)\n\n`picked` : 検品済(`X-Api-Version` が `1.4` 以降の場合)\n\n`packed` : 梱包済\n\n`shipped` : 出荷済\n\n`suspended` : 保留\n\n`modify_request` : 変更依頼中\n\n`cancel_request` : キャンセル依頼中\n",
                "example": "waiting"
              },
              "suspend": {
                "type": "boolean",
                "title": "保留フラグ",
                "description": "`true`は、出荷作業が開始されない保留状態を表します。\n\n保留状態の出荷依頼は、保留解除しない限り出荷作業が開始されません。\nただし、保留状態の出荷依頼にも在庫は引き当てられます。\n\n出荷作業を開始したくない場合に、出荷依頼時に`true`を指定します。\n保留状態を解除するには、[出荷依頼更新](#tag/shipments/operation/putShipment)を利用してください。",
                "default": false,
                "example": false,
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/213"
                }
              },
              "label_note": {
                "type": "string",
                "title": "品名",
                "description": "国内配送の送り状に記載される商品種別。\n\n出荷依頼作成時に、デフォルト品名（【出荷設定】 > 【その他設定】 > 「品名設定」）が未設定の場合に必須です。\n設定済みの場合は、その値が自動で使用されます。\n",
                "example": "玩具",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/21"
                }
              },
              "assigned_shipping_date": {
                "type": "string",
                "description": "発送予定日 (配送会社へ引き渡す予定の日付で、変動する場合があります)",
                "example": "2019-04-02"
              },
              "tax_included": {
                "type": "boolean",
                "description": "税込みフラグ",
                "example": true
              },
              "tax": {
                "type": "integer",
                "maximum": 999999999,
                "title": "消費税",
                "description": "同梱明細書に記載される「消費税」。出荷依頼作成時に指定します。\n\n【出荷】 > 【出荷設定】 > 【その他の設定】 > 「消費税設定」が「税抜」の場合にだけ、指定します。",
                "nullable": true,
                "example": 100
              },
              "total_with_normal_tax": {
                "type": "integer",
                "maximum": 999999999,
                "title": "合計通常税率",
                "description": "「合計」のうち消費税10%が適用される金額。出荷依頼作成時に指定します。\n\n「軽減税率適用商品」が含まれる場合のみ、指定した値が同梱明細書に記載されます。計算の整合性のチェックは行われず、空欄の場合に自動計算、補完もされません。",
                "example": 1000
              },
              "total_with_reduced_tax": {
                "type": "integer",
                "maximum": 999999999,
                "title": "合計軽減税率",
                "description": "「合計」のうち軽減税率の消費税8%が適用される金額。出荷依頼作成時に指定します。\n\n「軽減税率適用商品」が含まれる場合のみ、指定した値が同梱明細書に記載されます。計算の整合性のチェックは行われず、空欄の場合に自動計算、補完もされません。",
                "example": 500
              },
              "delivery_carrier": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "YAMATO",
                  "SAGAWA"
                ],
                "title": "配送会社",
                "description": "配送会社を指示したい場合に指定します。\n\n国内発送の場合に指定でき、指定すると別途料金が発生します。\n\n- `YAMATO`: ヤマト運輸\n- `SAGAWA`: 佐川急便\n",
                "example": "YAMATO",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/67"
                }
              },
              "delivery_time_slot": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "AM",
                  "12",
                  "14",
                  "16",
                  "18",
                  "19"
                ],
                "title": "希望時間指定",
                "description": "国内発送の場合に、配達の時間帯を指示したい場合に指定します。\n\n- `AM`: 午前中\n- `12`: 12時〜14時（佐川急便のみ指定可能）\n- `14`: 14時〜16時\n- `16`: 16時〜18時\n- `18`: 18時〜20時\n- `19`: 19時〜21時\n",
                "example": "AM",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/75"
                }
              },
              "delivery_date": {
                "type": "string",
                "format": "date",
                "nullable": true,
                "title": "配達希望日",
                "description": "国内発送の場合に、お届け希望日を指示したい場合に指定します。\n\n出荷作業の開始日を指定したい場合は、`shipping_date`をご利用ください。\n",
                "example": "2019-04-05",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/96"
                }
              },
              "delivery_day": {
                "type": "string",
                "nullable": true,
                "description": "お届け予定日",
                "example": "2019-04-05"
              },
              "cash_on_delivery": {
                "type": "boolean",
                "title": "代金引換指定",
                "description": "`true`を指定したときだけ代金引換となります。代金引換を利用する場合は、事前に配送会社とサービス契約している必要があります。",
                "default": false,
                "example": false
              },
              "total_for_cash_on_delivery": {
                "type": "integer",
                "maximum": 999999999,
                "title": "代金引換総計",
                "description": "配送先に請求する、消費税や送料、手数料なども含めた代引きの請求金額。出荷依頼作成時に指定します。\n代金引換の場合のみ指定します。",
                "example": 1100
              },
              "tax_for_cash_on_delivery": {
                "type": "integer",
                "maximum": 999999999,
                "title": "代金引換消費税",
                "description": "代金引換総計のうち、消費税に当たる金額。出荷依頼作成時に指定します。\n代金引換の場合のみ指定します。",
                "example": 100
              },
              "delivery_method": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "POST_EXPRESS",
                  "HOME_BOX"
                ],
                "title": "配送便指定",
                "description": "SSサイズの商品、入荷実績のない商品で「配送便」を指定したい場合に指定します。\nSSサイズの商品のみ、かつポスト便のサイズに収まった場合に、このパラメータの省略時には`POST_EXPRESS`が設定されます。\n\n- `POST_EXPRESS`: ポスト便 (宅配便スピード)での配送 (SSサイズの商品で指定可能)\n- `HOME_BOX`: 宅配便 (段ボール梱包)での配送\n",
                "example": "HOME_BOX",
                "externalDocs": {
                  "description": "詳細はこちらのページをご確認ください。",
                  "url": "https://help.openlogi.com/faq/show/212"
                }
              },
              "delivery_options": {
                "$ref": "#/components/schemas/DeliveryOption"
              },
              "bundle_shipping_label": {
                "type": "string",
                "description": "引き取り交換フラグ",
                "nullable": true
              },
              "warehouse": {
                "type": "string",
                "description": "倉庫コード",
                "example": "OPL"
              },
              "items": {
                "type": "array",
                "description": "配送商品リスト",
                "items": {
                  "$ref": "#/components/schemas/components-schemas-ItemResponse"
                }
              },
              "destination": {
                "type": "object",
                "description": "移動先倉庫情報",
                "properties": {
                  "warehouse": {
                    "type": "string",
                    "description": "倉庫コード",
                    "example": "BASE3"
                  },
                  "warehousing": {
                    "type": "object",
                    "description": "入荷情報",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "入荷ID",
                        "example": "TS001-W0001"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "$ref": "#/components/schemas/WarehouseBaseTransferSender"
          },
          {
            "$ref": "#/components/schemas/WarehouseBaseTransferRecipient"
          }
        ]
      }
    },
    "responses": {
      "BadRequest": {
        "description": "エラー（Bad Request）",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "error"
              ],
              "properties": {
                "error": {
                  "description": "エラーの種類を示します",
                  "type": "string",
                  "example": "exception"
                },
                "error_description": {
                  "description": "エラーの概要メッセージが入ります",
                  "type": "string",
                  "example": "キャンセルできませんでした"
                }
              }
            }
          }
        }
      },
      "Unauthorized": {
        "description": "エラー（Unauthorized）",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "error"
              ],
              "properties": {
                "error": {
                  "description": "エラーの種類を示します",
                  "type": "string",
                  "example": "unauthorized"
                },
                "error_description": {
                  "description": "エラーの概要メッセージが入ります",
                  "type": "string",
                  "example": "Unauthenticated"
                }
              }
            }
          }
        }
      },
      "Forbidden": {
        "description": "エラー（Forbidden）",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "error"
              ],
              "properties": {
                "error": {
                  "description": "エラーの種類を示します",
                  "type": "string",
                  "example": "forbidden"
                },
                "error_description": {
                  "description": "エラーの概要メッセージが入ります",
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          }
        }
      },
      "UnprocessableContent": {
        "description": "エラー（Unprocessable Content）",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "error"
              ],
              "properties": {
                "error": {
                  "description": "エラーの種類を示します",
                  "type": "string",
                  "example": "validation_failed"
                },
                "error_description": {
                  "description": "エラーの概要メッセージが入ります",
                  "type": "string",
                  "example": "Invalid Request"
                },
                "errors": {
                  "description": "リクエスト内容の検査エラーとなったプロパティとエラー内容が入ります",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "example": {
                    "example_name": "example_nameは必ず指定してください",
                    "example_items.0.example_quantity": "example_quantityには、1以上の数字をご指定ください。"
                  }
                }
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "エラー（Not Found）",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "error"
              ],
              "properties": {
                "error": {
                  "description": "エラーの種類を示します",
                  "type": "string",
                  "example": "not_found"
                },
                "error_description": {
                  "description": "エラーの概要メッセージが入ります",
                  "type": "string",
                  "example": "Not Found"
                }
              }
            }
          }
        }
      },
      "PaymentRequired": {
        "description": "エラー（Payment Required）",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "error"
              ],
              "properties": {
                "error": {
                  "description": "エラーの種類を示します",
                  "type": "string",
                  "example": "payment_required"
                },
                "error_description": {
                  "description": "エラーの概要メッセージが入ります",
                  "type": "string",
                  "example": "ご利用するにはお支払い方法の登録が必要になります"
                }
              }
            }
          }
        }
      },
      "BulkPostShipmentsUnprocessableContent": {
        "description": "エラー（Unprocessable Content）",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "error"
              ],
              "properties": {
                "error": {
                  "description": "エラーの種類を示します",
                  "type": "string"
                },
                "error_description": {
                  "description": "エラーの概要メッセージが入ります",
                  "type": "string"
                },
                "errors": {
                  "description": "リクエスト内容の検査エラーとなったプロパティとエラー内容が入ります",
                  "type": "object",
                  "additionalProperties": {
                    "description": "検査エラーとなったプロパティごとにエラー内容が入ります。\n`shipments`配列の0番目のリクエストに含まれる`identifier`が検査エラーとなった場合は、例の様に`shipments.0.identifier`にエラー内容の配列がセットされます。",
                    "type": "string"
                  },
                  "properties": {
                    "shipments.index": {
                      "description": "検査エラーとなったリクエストの配列位置。0から始まります。",
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "minimum": 0
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "リクエスト全体に対するエラー": {
                "value": {
                  "error": "validation_failed",
                  "error_description": "Invalid Request",
                  "errors": {
                    "shipments": [
                      "shipmentsは必ず指定してください。"
                    ]
                  }
                }
              },
              "個々の出荷依頼に対するエラー": {
                "value": {
                  "error": "validation_failed",
                  "error_description": "Bulk Shipments Validation Failed",
                  "errors": {
                    "shipments.index": [
                      0,
                      2
                    ],
                    "shipments.0.identifier": [
                      "identifierに正しい形式をご指定ください。"
                    ],
                    "shipments.2.purpose": [
                      "指定したpurposeは使用できません"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "examples": {
      "DomesticShipmentRequest": {
        "summary": "国内向け出荷依頼",
        "value": {
          "identifier": "2015-00001",
          "order_no": "12345-67890",
          "sender": {
            "postcode": "170-0013",
            "prefecture": "東京都",
            "address1": "豊島区東池袋1-34-5",
            "address2": "いちご東池袋ビル9F",
            "name": "山田 太郎",
            "company": "スライム株式会社",
            "division": "メタル部",
            "phone": "03-3333-3333"
          },
          "subtotal_amount": 1000,
          "delivery_charge": 500,
          "handling_charge": 0,
          "discount_amount": 0,
          "total_amount": 1500,
          "total_with_normal_tax": 0,
          "total_with_reduced_tax": 1000,
          "cushioning_unit": "ORDER",
          "cushioning_type": "BUBBLE_PACK",
          "gift_wrapping_unit": "ORDER",
          "gift_wrapping_type": "NAVY",
          "gift_sender_name": "オープン太郎",
          "shipping_email": "test@example.com",
          "delivery_note_type": "NOT_INCLUDE_PII",
          "price_on_delivery_note": true,
          "message": "お買上げありがとうございます。",
          "suspend": false,
          "shipping_date": "2019-04-02",
          "recipient": {
            "postcode": "170-0013",
            "prefecture": "東京都",
            "address1": "豊島区東池袋1-34-5",
            "address2": "いちご東池袋ビル9F",
            "name": "山田 太郎",
            "company": "スライム株式会社",
            "division": "メタル部",
            "phone": "03-3333-3333"
          },
          "delivery_carrier": "YAMATO",
          "delivery_time_slot": "AM",
          "delivery_date": "2019-04-05",
          "cash_on_delivery": false,
          "delivery_method": "HOME_BOX",
          "delivery_options": {
            "box_delivery": true,
            "fragile_item": true
          },
          "warehouse": "OPL",
          "items": [
            {
              "code": "item-001",
              "quantity": 1,
              "name": "勇者の盾",
              "unit_price": 1000,
              "price": 1000,
              "is_reduced_tax": true,
              "backorder_if_unavailable": false
            }
          ],
          "international": false
        }
      },
      "InternationalShipmentRequest": {
        "summary": "海外向け出荷依頼",
        "value": {
          "identifier": "2015-00002",
          "order_no": "12345-67890",
          "sender": {
            "region_code": "JP",
            "postcode": "170-0013",
            "prefecture": "Tokyo",
            "address1": "Tshima-ku 1-34-5",
            "address2": "Ichigo-HigashiIkebkuroBuilding 9F",
            "name": "yamada taro",
            "phone": "03-3333-3333"
          },
          "subtotal_amount": 1000,
          "delivery_charge": 500,
          "handling_charge": 0,
          "discount_amount": 0,
          "total_amount": 1500,
          "cushioning_unit": "ORDER",
          "cushioning_type": "BUBBLE_PACK",
          "gift_wrapping_unit": "ORDER",
          "gift_wrapping_type": "NAVY",
          "gift_sender_name": "オープン太郎",
          "shipping_email": "test@example.com",
          "delivery_note_type": "NOT_INCLUDE_PII",
          "price_on_delivery_note": true,
          "message": "お買上げありがとうございます。",
          "suspend": false,
          "shipping_date": "2019-04-02",
          "recipient": {
            "region_code": "AU",
            "postcode": "94043",
            "city": "Mountain View, CA",
            "address": "1600 Amphitheatre Parkway",
            "name": "open太郎",
            "phone": "03-3333-3333"
          },
          "cash_on_delivery": false,
          "delivery_method": "HOME_BOX",
          "delivery_options": {
            "box_delivery": true,
            "fragile_item": true
          },
          "warehouse": "OPL",
          "items": [
            {
              "code": "item-001",
              "quantity": 1,
              "name": "勇者の盾",
              "unit_price": 1000,
              "price": 1000,
              "backorder_if_unavailable": false
            }
          ],
          "international": true,
          "delivery_service": "JAPANPOST-EMS",
          "currency_code": "JPY",
          "insurance": true,
          "purpose": "GIFT"
        }
      },
      "DomesticShipmentRequestList": {
        "summary": "国内向け出荷依頼",
        "value": {
          "shipments": [
            {
              "identifier": "2015-00001",
              "order_no": "12345-67890",
              "sender": {
                "postcode": "170-0013",
                "prefecture": "東京都",
                "address1": "豊島区東池袋1-34-5",
                "address2": "いちご東池袋ビル9F",
                "name": "山田 太郎",
                "company": "スライム株式会社",
                "division": "メタル部",
                "phone": "03-3333-3333"
              },
              "subtotal_amount": 1000,
              "delivery_charge": 500,
              "handling_charge": 0,
              "discount_amount": 0,
              "total_amount": 1500,
              "total_with_normal_tax": 0,
              "total_with_reduced_tax": 1000,
              "cushioning_unit": "ORDER",
              "cushioning_type": "BUBBLE_PACK",
              "gift_wrapping_unit": "ORDER",
              "gift_wrapping_type": "NAVY",
              "gift_sender_name": "オープン太郎",
              "shipping_email": "test@example.com",
              "delivery_note_type": "NOT_INCLUDE_PII",
              "price_on_delivery_note": true,
              "message": "お買上げありがとうございます。",
              "suspend": false,
              "shipping_date": "2019-04-02",
              "recipient": {
                "postcode": "170-0013",
                "prefecture": "東京都",
                "address1": "豊島区東池袋1-34-5",
                "address2": "いちご東池袋ビル9F",
                "name": "山田 太郎",
                "company": "スライム株式会社",
                "division": "メタル部",
                "phone": "03-3333-3333"
              },
              "delivery_carrier": "YAMATO",
              "delivery_time_slot": "AM",
              "delivery_date": "2019-04-05",
              "cash_on_delivery": false,
              "delivery_method": "HOME_BOX",
              "delivery_options": {
                "box_delivery": true,
                "fragile_item": true
              },
              "warehouse": "OPL",
              "items": [
                {
                  "code": "item-001",
                  "quantity": 1,
                  "name": "勇者の盾",
                  "unit_price": 1000,
                  "price": 1000,
                  "is_reduced_tax": true,
                  "backorder_if_unavailable": false
                }
              ],
              "international": false
            }
          ]
        }
      },
      "Region": {
        "summary": "国コード情報リスト",
        "value": {
          "regions": [
            {
              "code": "AU",
              "name": "オーストラリア",
              "name_english": "AUSTRALIA",
              "region_ems": "2-2"
            },
            {
              "code": "BB",
              "name": "バルバドス",
              "name_english": "BARBADOS",
              "region_ems": "2-1"
            },
            {
              "code": "FR",
              "name": "フランス",
              "name_english": "FRANCE",
              "region_ems": "2-2"
            },
            {
              "code": "FR-CORSICA",
              "name": "コルシカ",
              "name_english": "CORSICA",
              "region_ems": "2-2"
            }
          ]
        }
      },
      "Currency": {
        "summary": "通貨情報",
        "value": {
          "currencies": [
            {
              "code": "JPY",
              "name": "日本円"
            },
            {
              "code": "USD",
              "name": "ドル"
            },
            {
              "code": "CNY",
              "name": "人民元"
            },
            {
              "code": "EUR",
              "name": "ユーロ"
            },
            {
              "code": "GBP",
              "name": "ポンド"
            },
            {
              "code": "AUD",
              "name": "豪ドル"
            }
          ]
        }
      }
    }
  }
}